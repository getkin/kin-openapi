openapi: 3.0.1
servers:
  - url: https://api.presalytics.io/ooxml-automation
info:
  description: This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.
  title: OOXML Automation
  version: 0.1.0
  x-apisguru-categories:
    - analytics
  x-logo:
    url: https://presalytics.io/static/img/Logo/Logos/Orange-White/navbar.png
  x-origin:
    - format: openapi
      url: https://api.presalytics.io/ooxml-automation/docs/v1/openapi.json
      version: "3.0"
  x-providerName: presalytics.io
  x-serviceName: ooxml
tags:
  - description: Charts
    name: Charts
  - description: Charts / Axes
    name: Charts/Axes
  - description: Charts / AxisDataTypes
    name: Charts/AxisDataTypes
  - description: Charts / ChartData
    name: Charts/ChartData
  - description: Charts / ColumnCollections
    name: Charts/ColumnCollections
  - description: Charts / Columns
    name: Charts/Columns
  - description: Charts / DataPoints
    name: Charts/DataPoints
  - description: Charts / PlotType
    name: Charts/PlotType
  - description: Charts / RowCol
    name: Charts/RowCol
  - description: Charts / RowCollections
    name: Charts/RowCollections
  - description: Charts / RowNameFormatTypes
    name: Charts/RowNameFormatTypes
  - description: Charts / Rows
    name: Charts/Rows
  - description: ConnectionShapes
    name: ConnectionShapes
  - description: Documents
    name: Documents
  - description: Documents / DocumentType
    name: Documents/DocumentType
  - description: Groups
    name: Groups
  - description: Images
    name: Images
  - description: Shapes
    name: Shapes
  - description: ShapeTrees
    name: ShapeTrees
  - description: Shared / ColorTransformationAttributes
    name: Shared/ColorTransformationAttributes
  - description: Shared / ColorTransformations
    name: Shared/ColorTransformations
  - description: Shared / ColorTypes
    name: Shared/ColorTypes
  - description: Shared / DashTypes
    name: Shared/DashTypes
  - description: Shared / EffectAttributes
    name: Shared/EffectAttributes
  - description: Shared / Effects
    name: Shared/Effects
  - description: Shared / EffectTypes
    name: Shared/EffectTypes
  - description: Shared / FillMap
    name: Shared/FillMap
  - description: Shared / FillTypes
    name: Shared/FillTypes
  - description: Shared / GradientFills
    name: Shared/GradientFills
  - description: Shared / GradientStops
    name: Shared/GradientStops
  - description: Shared / ImageFills
    name: Shared/ImageFills
  - description: Shared / LineEndSizes
    name: Shared/LineEndSizes
  - description: Shared / LineEndTypes
    name: Shared/LineEndTypes
  - description: Shared / Lines
    name: Shared/Lines
  - description: Shared / Paragraph
    name: Shared/Paragraph
  - description: Shared / SolidFills
    name: Shared/SolidFills
  - description: Shared / Text
    name: Shared/Text
  - description: Shared / TextContainer
    name: Shared/TextContainer
  - description: Slides
    name: Slides
  - description: Slides / ColorMaps
    name: Slides/ColorMaps
  - description: Slides / Graphics
    name: Slides/Graphics
  - description: Slides / GraphicTypes
    name: Slides/GraphicTypes
  - description: Slides / GroupElements
    name: Slides/GroupElements
  - description: Slides / GroupElementTypes
    name: Slides/GroupElementTypes
  - description: Slides / SlideMasters
    name: Slides/SlideMasters
  - description: SmartArts
    name: SmartArts
  - description: Tables
    name: Tables
  - description: Tables / Borders
    name: Tables/Borders
  - description: Tables / Cells
    name: Tables/Cells
  - description: Tables / Columns
    name: Tables/Columns
  - description: Tables / Rows
    name: Tables/Rows
  - description: Themes
    name: Themes
  - description: Themes / BackgroundFills
    name: Themes/BackgroundFills
  - description: Themes / Colors
    name: Themes/Colors
  - description: Themes / CustomColors
    name: Themes/CustomColors
  - description: Themes / EffectMap
    name: Themes/EffectMap
  - description: Themes / Fills
    name: Themes/Fills
  - description: Themes / Fonts
    name: Themes/Fonts
  - description: Themes / Intensity
    name: Themes/Intensity
  - description: Themes / LineMap
    name: Themes/LineMap
paths:
  "/Charts/Axes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Axes object by its primary key (id)"
      operationId: chart_axes_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.Axes"
          description: Success
        "401":
          description: Unauthorized
      summary: "Axes: Get by Id"
      tags:
        - Charts/Axes
  /Charts/AxisDataTypes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the AxisDataTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Chart object space."
      operationId: chart_axisdatatypes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Chart.AxisDataTypes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "AxisDataTypes: List All Possible Types"
      tags:
        - Charts/AxisDataTypes
      x-operationName: list
  "/Charts/AxisDataTypes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: chart_axisdatatypes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.AxisDataTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "AxisDataTypes: Get By Type Id"
      tags:
        - Charts/AxisDataTypes
      x-operationName: type-id
  "/Charts/AxisDataTypes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a AxisDataTypes object by its primary key (id)"
      operationId: chart_axisdatatypes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.AxisDataTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "AxisDataTypes: Get by Id"
      tags:
        - Charts/AxisDataTypes
  "/Charts/ChartData/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a ChartData object by its primary key (id)"
      operationId: chart_chartdata_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.ChartData"
          description: Success
        "401":
          description: Unauthorized
      summary: "ChartData: Get by Id"
      tags:
        - Charts/ChartData
  "/Charts/ChartUpdate/{id}":
    get:
      description: Gets a ChartDataDTO object, usually used for downstream analytics and chart updates
      operationId: charts_charts_chartupdate_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.ChartDataDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "Charts: Get Chart Data"
      tags:
        - Charts
    put:
      description: Simplifies chart update by allowing users to supply data via ChartDataDTO
      operationId: charts_charts_chartupdate_put_id
      parameters:
        - description: The Chart Id
          in: path
          name: id
          required: true
          schema:
            description: The Chart Id
            format: uuid
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/Chart.ChartDataDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/Chart.ChartDataDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Chart.ChartDataDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/Chart.ChartDataDTO"
        description: The ChartDataDto Object
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Charts: Update Chart Data"
      tags:
        - Charts
  "/Charts/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Chart and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: charts_charts_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Charts: Get Dependent Objects Tree"
      tags:
        - Charts
      x-operationName: get-obj-tree
  "/Charts/ColumnCollections/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a ColumnCollections object by its primary key (id)"
      operationId: chart_columncollections_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.ColumnCollections"
          description: Success
        "401":
          description: Unauthorized
      summary: "ColumnCollections: Get by Id"
      tags:
        - Charts/ColumnCollections
  "/Charts/Columns/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Columns object by its primary key (id)"
      operationId: chart_columns_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.Columns"
          description: Success
        "401":
          description: Unauthorized
      summary: "Columns: Get by Id"
      tags:
        - Charts/Columns
  "/Charts/DataPoints/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a DataPoints object by its primary key (id)"
      operationId: chart_datapoints_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.DataPoints"
          description: Success
        "401":
          description: Unauthorized
      summary: "DataPoints: Get by Id"
      tags:
        - Charts/DataPoints
  "/Charts/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: charts_charts_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.Charts.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Charts: Get Details"
      tags:
        - Charts
      x-operationName: details
  "/Charts/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Chart object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Chart objects.
      operationId: charts_charts_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Charts: Get Underlying Xml"
      tags:
        - Charts
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Chart object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Chart objects.
      operationId: charts_charts_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Charts: Modify Underlying Xml"
      tags:
        - Charts
      x-operationName: put-xml
  /Charts/PlotType:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the PlotType type. Use the Id from oneof the returned elements on to make changes to elements in the Chart object space."
      operationId: chart_plottype_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Chart.PlotType"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "PlotType: List All Possible Types"
      tags:
        - Charts/PlotType
      x-operationName: list
  "/Charts/PlotType/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: chart_plottype_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.PlotType"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "PlotType: Get By Type Id"
      tags:
        - Charts/PlotType
      x-operationName: type-id
  "/Charts/PlotType/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a PlotType object by its primary key (id)"
      operationId: chart_plottype_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.PlotType"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "PlotType: Get by Id"
      tags:
        - Charts/PlotType
  /Charts/RowCol:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the RowCol type. Use the Id from oneof the returned elements on to make changes to elements in the Chart object space."
      operationId: chart_rowcol_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Chart.RowCol"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "RowCol: List All Possible Types"
      tags:
        - Charts/RowCol
      x-operationName: list
  "/Charts/RowCol/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: chart_rowcol_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.RowCol"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "RowCol: Get By Type Id"
      tags:
        - Charts/RowCol
      x-operationName: type-id
  "/Charts/RowCol/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a RowCol object by its primary key (id)"
      operationId: chart_rowcol_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.RowCol"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "RowCol: Get by Id"
      tags:
        - Charts/RowCol
  "/Charts/RowCollections/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a RowCollections object by its primary key (id)"
      operationId: chart_rowcollections_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.RowCollections"
          description: Success
        "401":
          description: Unauthorized
      summary: "RowCollections: Get by Id"
      tags:
        - Charts/RowCollections
  /Charts/RowNameFormatTypes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the RowNameFormatTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Chart object space."
      operationId: chart_rownameformattypes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Chart.RowNameFormatTypes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "RowNameFormatTypes: List All Possible Types"
      tags:
        - Charts/RowNameFormatTypes
      x-operationName: list
  "/Charts/RowNameFormatTypes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: chart_rownameformattypes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.RowNameFormatTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "RowNameFormatTypes: Get By Type Id"
      tags:
        - Charts/RowNameFormatTypes
      x-operationName: type-id
  "/Charts/RowNameFormatTypes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a RowNameFormatTypes object by its primary key (id)"
      operationId: chart_rownameformattypes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.RowNameFormatTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "RowNameFormatTypes: Get by Id"
      tags:
        - Charts/RowNameFormatTypes
  "/Charts/Rows/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Rows object by its primary key (id)"
      operationId: chart_rows_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.Rows"
          description: Success
        "401":
          description: Unauthorized
      summary: "Rows: Get by Id"
      tags:
        - Charts/Rows
  "/Charts/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Chart as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: charts_charts_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Charts: Get Svg file"
      tags:
        - Charts
      x-operationName: get-svg
  "/Charts/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Charts object by its primary key (id)"
      operationId: charts_charts_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chart.Charts"
          description: Success
        "401":
          description: Unauthorized
      summary: "Charts: Get by Id"
      tags:
        - Charts
  "/ConnectionShapes/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: slides_connectionshapes_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Slides: Get Dependent Objects Tree"
      tags:
        - ConnectionShapes
      x-operationName: get-obj-tree
  "/ConnectionShapes/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: slides_connectionshapes_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.Connector.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Slides: Get Details"
      tags:
        - ConnectionShapes
      x-operationName: details
  "/ConnectionShapes/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.
      operationId: slides_connectionshapes_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Underlying Xml"
      tags:
        - ConnectionShapes
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.
      operationId: slides_connectionshapes_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Modify Underlying Xml"
      tags:
        - ConnectionShapes
      x-operationName: put-xml
  "/ConnectionShapes/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: slides_connectionshapes_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Svg file"
      tags:
        - ConnectionShapes
      x-operationName: get-svg
  "/ConnectionShapes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a ConnectionShapes object by its primary key (id)"
      operationId: slides_connectionshapes_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.Connector"
          description: Success
        "401":
          description: Unauthorized
      summary: "ConnectionShapes: Get by Id"
      tags:
        - ConnectionShapes
  /Documents:
    post:
      description: Upload an OpenOfficeXml document (e.g., .xlsx, .pptx) for processing by the API.
      operationId: documents_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The file to upload.  Must be of type .pptx, ppt
                  format: binary
                  title: Story File
                  type: string
                storyId:
                  description: The story_id of the document being uploaded.
                  format: uuid
                  title: Story Id
                  type: string
              required:
                - file
                - storyId
              title: Story file form data
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Document"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Document"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/Document"
                type: array
          description: Success
        "400":
          description: Bad Request
      summary: "Documents: Upload"
      tags:
        - Documents
  "/Documents/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this DocumentsController and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: documents_childobjects_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          description: Bad Request
        "403":
          description: Forbidden
      summary: "DocumentsController: Get Dependent Objects Tree"
      tags:
        - Documents
      x-operationName: get-obj-tree
  "/Documents/Clone/{id}":
    post:
      description: Clone A Document that has already been uploaded to a new Story
      operationId: documents_clone_post_id
      parameters:
        - description: the Source document Id
          in: path
          name: id
          required: true
          schema:
            description: the Source document Id
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentCloneDTO"
        description: A DocumentCloneDto object with containing information required for cloning the document
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/plain:
              schema:
                $ref: "#/components/schemas/Document"
          description: Success
        "400":
          description: Bad Request
      summary: "Documents: Clone an existing Ooxml Document to new Parent Story"
      tags:
        - Documents
  /Documents/DocumentType:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the DocumentType type. Use the Id from oneof the returned elements on to make changes to elements in the Documents object space."
      operationId: documents_documenttype_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DocumentType"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "DocumentType: List All Possible Types"
      tags:
        - Documents/DocumentType
      x-operationName: list
  "/Documents/DocumentType/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: documents_documenttype_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentType"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "DocumentType: Get By Type Id"
      tags:
        - Documents/DocumentType
      x-operationName: type-id
  "/Documents/DocumentType/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a DocumentType object by its primary key (id)"
      operationId: documents_documenttype_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentType"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "DocumentType: Get by Id"
      tags:
        - Documents/DocumentType
  "/Documents/Download/{id}":
    get:
      description: Download the into a bytestream for client-side processing.
      operationId: documents_download_get_id_orginal
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - in: query
          name: orginal
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                title: File byte stream
                type: string
          description: Returns an updated version of the OpenOffice Xml file
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "Documents: Download"
      tags:
        - Documents
      x-operationName: download
  "/Documents/{id}":
    delete:
      description: "Permantly delete a document from the Ooxml Automation API. Note that is does not make changes to the related Presalytics APIs.\r

        Please use the delete endpoint in the story API to ensure that stories are not left with orphaned references to the Ooxml Automation API."
      operationId: documents_delete_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
        "403":
          description: Forbidden
      summary: "Documents: Delete by Id"
      tags:
        - Documents
    get:
      description: "Get by Id: Use this method to retrieve a Documents object by its primary key (id)"
      operationId: documents_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/plain:
              schema:
                $ref: "#/components/schemas/Document"
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      summary: "Documents: Get by Id"
      tags:
        - Documents
  "/Groups/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: slides_groups_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Slides: Get Dependent Objects Tree"
      tags:
        - Groups
      x-operationName: get-obj-tree
  "/Groups/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: slides_groups_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.Groups.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Slides: Get Details"
      tags:
        - Groups
      x-operationName: details
  "/Groups/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.
      operationId: slides_groups_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Underlying Xml"
      tags:
        - Groups
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.
      operationId: slides_groups_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Modify Underlying Xml"
      tags:
        - Groups
      x-operationName: put-xml
  "/Groups/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: slides_groups_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Svg file"
      tags:
        - Groups
      x-operationName: get-svg
  "/Groups/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Groups object by its primary key (id)"
      operationId: slides_groups_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.Groups"
          description: Success
        "401":
          description: Unauthorized
      summary: "Groups: Get by Id"
      tags:
        - Groups
  "/Images/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Shared and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: shared_images_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Shared: Get Dependent Objects Tree"
      tags:
        - Images
      x-operationName: get-obj-tree
  "/Images/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: shared_images_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.Pictures.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Shared: Get Details"
      tags:
        - Images
      x-operationName: details
  "/Images/GetImage/{Id}":
    put:
      description: Download Images extracted from Ooxml Documents
      operationId: shared_images_getimage_put_id
      parameters:
        - description: The Image Id
          in: path
          name: Id
          required: true
          schema:
            description: The Image Id
            format: uuid
            type: string
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "504":
          description: Server Error
      summary: "Image: Download Image"
      tags:
        - Images
  "/Images/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Shared object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Shared objects.
      operationId: shared_images_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Shared: Get Underlying Xml"
      tags:
        - Images
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Shared object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Shared objects.
      operationId: shared_images_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Shared: Modify Underlying Xml"
      tags:
        - Images
      x-operationName: put-xml
  "/Images/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Shared as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: shared_images_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Shared: Get Svg file"
      tags:
        - Images
      x-operationName: get-svg
  "/Images/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Images object by its primary key (id)"
      operationId: shared_images_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.Pictures"
          description: Success
        "401":
          description: Unauthorized
      summary: "Images: Get by Id"
      tags:
        - Images
  "/ShapeTrees/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: slides_shapetrees_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Slides: Get Dependent Objects Tree"
      tags:
        - ShapeTrees
      x-operationName: get-obj-tree
  "/ShapeTrees/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: slides_shapetrees_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.ShapeTrees.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Slides: Get Details"
      tags:
        - ShapeTrees
      x-operationName: details
  "/ShapeTrees/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.
      operationId: slides_shapetrees_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Underlying Xml"
      tags:
        - ShapeTrees
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.
      operationId: slides_shapetrees_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Modify Underlying Xml"
      tags:
        - ShapeTrees
      x-operationName: put-xml
  "/ShapeTrees/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: slides_shapetrees_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Svg file"
      tags:
        - ShapeTrees
      x-operationName: get-svg
  "/ShapeTrees/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a ShapeTrees object by its primary key (id)"
      operationId: slides_shapetrees_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.ShapeTrees"
          description: Success
        "401":
          description: Unauthorized
      summary: "ShapeTrees: Get by Id"
      tags:
        - ShapeTrees
  "/Shapes/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: slides_shapes_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Slides: Get Dependent Objects Tree"
      tags:
        - Shapes
      x-operationName: get-obj-tree
  "/Shapes/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: slides_shapes_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.Shapes.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Slides: Get Details"
      tags:
        - Shapes
      x-operationName: details
  "/Shapes/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.
      operationId: slides_shapes_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Underlying Xml"
      tags:
        - Shapes
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.
      operationId: slides_shapes_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Modify Underlying Xml"
      tags:
        - Shapes
      x-operationName: put-xml
  "/Shapes/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: slides_shapes_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Svg file"
      tags:
        - Shapes
      x-operationName: get-svg
  "/Shapes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Shapes object by its primary key (id)"
      operationId: slides_shapes_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.Shapes"
          description: Success
        "401":
          description: Unauthorized
      summary: "Shapes: Get by Id"
      tags:
        - Shapes
  "/Shared/ColorTransformationAttributes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a ColorTransformationAttributes object by its primary key (id)"
      operationId: shared_colortransformationattributes_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.ColorTransformationAttributes"
          description: Success
        "401":
          description: Unauthorized
      summary: "ColorTransformationAttributes: Get by Id"
      tags:
        - Shared/ColorTransformationAttributes
  "/Shared/ColorTransformations/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a ColorTransformations object by its primary key (id)"
      operationId: shared_colortransformations_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.ColorTransformations"
          description: Success
        "401":
          description: Unauthorized
      summary: "ColorTransformations: Get by Id"
      tags:
        - Shared/ColorTransformations
  /Shared/ColorTypes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the ColorTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space."
      operationId: shared_colortypes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Shared.ColorTypes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "ColorTypes: List All Possible Types"
      tags:
        - Shared/ColorTypes
      x-operationName: list
  "/Shared/ColorTypes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: shared_colortypes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.ColorTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "ColorTypes: Get By Type Id"
      tags:
        - Shared/ColorTypes
      x-operationName: type-id
  "/Shared/ColorTypes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a ColorTypes object by its primary key (id)"
      operationId: shared_colortypes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.ColorTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "ColorTypes: Get by Id"
      tags:
        - Shared/ColorTypes
  /Shared/DashTypes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the DashTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space."
      operationId: shared_dashtypes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Shared.DashTypes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "DashTypes: List All Possible Types"
      tags:
        - Shared/DashTypes
      x-operationName: list
  "/Shared/DashTypes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: shared_dashtypes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.DashTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "DashTypes: Get By Type Id"
      tags:
        - Shared/DashTypes
      x-operationName: type-id
  "/Shared/DashTypes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a DashTypes object by its primary key (id)"
      operationId: shared_dashtypes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.DashTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "DashTypes: Get by Id"
      tags:
        - Shared/DashTypes
  "/Shared/EffectAttributes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a EffectAttributes object by its primary key (id)"
      operationId: shared_effectattributes_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.EffectAttributes"
          description: Success
        "401":
          description: Unauthorized
      summary: "EffectAttributes: Get by Id"
      tags:
        - Shared/EffectAttributes
  /Shared/EffectTypes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the EffectTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space."
      operationId: shared_effecttypes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Shared.EffectTypes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "EffectTypes: List All Possible Types"
      tags:
        - Shared/EffectTypes
      x-operationName: list
  "/Shared/EffectTypes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: shared_effecttypes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.EffectTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "EffectTypes: Get By Type Id"
      tags:
        - Shared/EffectTypes
      x-operationName: type-id
  "/Shared/EffectTypes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a EffectTypes object by its primary key (id)"
      operationId: shared_effecttypes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.EffectTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "EffectTypes: Get by Id"
      tags:
        - Shared/EffectTypes
  "/Shared/Effects/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Effects object by its primary key (id)"
      operationId: shared_effects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.Effects"
          description: Success
        "401":
          description: Unauthorized
      summary: "Effects: Get by Id"
      tags:
        - Shared/Effects
  "/Shared/FillMap/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a FillMap object by its primary key (id)"
      operationId: shared_fillmap_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.FillMap"
          description: Success
        "401":
          description: Unauthorized
      summary: "FillMap: Get by Id"
      tags:
        - Shared/FillMap
  /Shared/FillTypes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the FillTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space."
      operationId: shared_filltypes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Shared.FillTypes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "FillTypes: List All Possible Types"
      tags:
        - Shared/FillTypes
      x-operationName: list
  "/Shared/FillTypes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: shared_filltypes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.FillTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "FillTypes: Get By Type Id"
      tags:
        - Shared/FillTypes
      x-operationName: type-id
  "/Shared/FillTypes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a FillTypes object by its primary key (id)"
      operationId: shared_filltypes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.FillTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "FillTypes: Get by Id"
      tags:
        - Shared/FillTypes
  "/Shared/GradientFills/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a GradientFills object by its primary key (id)"
      operationId: shared_gradientfills_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.GradientFills"
          description: Success
        "401":
          description: Unauthorized
      summary: "GradientFills: Get by Id"
      tags:
        - Shared/GradientFills
  "/Shared/GradientStops/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a GradientStops object by its primary key (id)"
      operationId: shared_gradientstops_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.GradientStops"
          description: Success
        "401":
          description: Unauthorized
      summary: "GradientStops: Get by Id"
      tags:
        - Shared/GradientStops
  "/Shared/ImageFills/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a ImageFills object by its primary key (id)"
      operationId: shared_imagefills_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.ImageFills"
          description: Success
        "401":
          description: Unauthorized
      summary: "ImageFills: Get by Id"
      tags:
        - Shared/ImageFills
  /Shared/LineEndSizes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the LineEndSizes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space."
      operationId: shared_lineendsizes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Shared.LineEndSizes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "LineEndSizes: List All Possible Types"
      tags:
        - Shared/LineEndSizes
      x-operationName: list
  "/Shared/LineEndSizes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: shared_lineendsizes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.LineEndSizes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "LineEndSizes: Get By Type Id"
      tags:
        - Shared/LineEndSizes
      x-operationName: type-id
  "/Shared/LineEndSizes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a LineEndSizes object by its primary key (id)"
      operationId: shared_lineendsizes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.LineEndSizes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "LineEndSizes: Get by Id"
      tags:
        - Shared/LineEndSizes
  /Shared/LineEndTypes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the LineEndTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Shared object space."
      operationId: shared_lineendtypes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Shared.LineEndTypes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "LineEndTypes: List All Possible Types"
      tags:
        - Shared/LineEndTypes
      x-operationName: list
  "/Shared/LineEndTypes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: shared_lineendtypes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.LineEndTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "LineEndTypes: Get By Type Id"
      tags:
        - Shared/LineEndTypes
      x-operationName: type-id
  "/Shared/LineEndTypes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a LineEndTypes object by its primary key (id)"
      operationId: shared_lineendtypes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.LineEndTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "LineEndTypes: Get by Id"
      tags:
        - Shared/LineEndTypes
  "/Shared/Lines/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Lines object by its primary key (id)"
      operationId: shared_lines_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.Lines"
          description: Success
        "401":
          description: Unauthorized
      summary: "Lines: Get by Id"
      tags:
        - Shared/Lines
  "/Shared/Paragraph/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Paragraph object by its primary key (id)"
      operationId: shared_paragraph_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.Paragraph"
          description: Success
        "401":
          description: Unauthorized
      summary: "Paragraph: Get by Id"
      tags:
        - Shared/Paragraph
  "/Shared/SolidFills/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a SolidFills object by its primary key (id)"
      operationId: shared_solidfills_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.SolidFills"
          description: Success
        "401":
          description: Unauthorized
      summary: "SolidFills: Get by Id"
      tags:
        - Shared/SolidFills
  "/Shared/Text/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Text object by its primary key (id)"
      operationId: shared_text_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.Text"
          description: Success
        "401":
          description: Unauthorized
      summary: "Text: Get by Id"
      tags:
        - Shared/Text
  "/Shared/TextContainer/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a TextContainer object by its primary key (id)"
      operationId: shared_textcontainer_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Shared.TextContainer"
          description: Success
        "401":
          description: Unauthorized
      summary: "TextContainer: Get by Id"
      tags:
        - Shared/TextContainer
  "/Slides/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: slides_slides_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Slides: Get Dependent Objects Tree"
      tags:
        - Slides
      x-operationName: get-obj-tree
  "/Slides/ColorMaps/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a ColorMaps object by its primary key (id)"
      operationId: slides_colormaps_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.ColorMaps"
          description: Success
        "401":
          description: Unauthorized
      summary: "ColorMaps: Get by Id"
      tags:
        - Slides/ColorMaps
  "/Slides/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: slides_slides_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.Slides.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Slides: Get Details"
      tags:
        - Slides
      x-operationName: details
  /Slides/GraphicTypes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the GraphicTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Slides object space."
      operationId: slides_graphictypes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Slide.GraphicTypes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "GraphicTypes: List All Possible Types"
      tags:
        - Slides/GraphicTypes
      x-operationName: list
  "/Slides/GraphicTypes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: slides_graphictypes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.GraphicTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "GraphicTypes: Get By Type Id"
      tags:
        - Slides/GraphicTypes
      x-operationName: type-id
  "/Slides/GraphicTypes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a GraphicTypes object by its primary key (id)"
      operationId: slides_graphictypes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.GraphicTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "GraphicTypes: Get by Id"
      tags:
        - Slides/GraphicTypes
  "/Slides/Graphics/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Graphics object by its primary key (id)"
      operationId: slides_graphics_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.Graphics"
          description: Success
        "401":
          description: Unauthorized
      summary: "Graphics: Get by Id"
      tags:
        - Slides/Graphics
  /Slides/GroupElementTypes:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the GroupElementTypes type. Use the Id from oneof the returned elements on to make changes to elements in the Slides object space."
      operationId: slides_groupelementtypes_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Slide.GroupElementTypes"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "GroupElementTypes: List All Possible Types"
      tags:
        - Slides/GroupElementTypes
      x-operationName: list
  "/Slides/GroupElementTypes/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: slides_groupelementtypes_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.GroupElementTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "GroupElementTypes: Get By Type Id"
      tags:
        - Slides/GroupElementTypes
      x-operationName: type-id
  "/Slides/GroupElementTypes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a GroupElementTypes object by its primary key (id)"
      operationId: slides_groupelementtypes_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.GroupElementTypes"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "GroupElementTypes: Get by Id"
      tags:
        - Slides/GroupElementTypes
  "/Slides/GroupElements/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a GroupElements object by its primary key (id)"
      operationId: slides_groupelements_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.GroupElements"
          description: Success
        "401":
          description: Unauthorized
      summary: "GroupElements: Get by Id"
      tags:
        - Slides/GroupElements
  "/Slides/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.
      operationId: slides_slides_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Underlying Xml"
      tags:
        - Slides
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.
      operationId: slides_slides_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Modify Underlying Xml"
      tags:
        - Slides
      x-operationName: put-xml
  "/Slides/SlideMasters/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a SlideMasters object by its primary key (id)"
      operationId: slides_slidemasters_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.SlideMasters"
          description: Success
        "401":
          description: Unauthorized
      summary: "SlideMasters: Get by Id"
      tags:
        - Slides/SlideMasters
  "/Slides/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: slides_slides_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Svg file"
      tags:
        - Slides
      x-operationName: get-svg
  "/Slides/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Slides object by its primary key (id)"
      operationId: slides_slides_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.Slides"
          description: Success
        "401":
          description: Unauthorized
      summary: "Slides: Get by Id"
      tags:
        - Slides
  "/SmartArts/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Slide and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: slides_smartarts_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Slides: Get Dependent Objects Tree"
      tags:
        - SmartArts
      x-operationName: get-obj-tree
  "/SmartArts/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: slides_smartarts_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.SmartArts.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Slides: Get Details"
      tags:
        - SmartArts
      x-operationName: details
  "/SmartArts/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Slide object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Slide objects.
      operationId: slides_smartarts_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Underlying Xml"
      tags:
        - SmartArts
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Slide object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Slide objects.
      operationId: slides_smartarts_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Modify Underlying Xml"
      tags:
        - SmartArts
      x-operationName: put-xml
  "/SmartArts/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Slide as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: slides_smartarts_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Slides: Get Svg file"
      tags:
        - SmartArts
      x-operationName: get-svg
  "/SmartArts/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a SmartArts object by its primary key (id)"
      operationId: slides_smartarts_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Slide.SmartArts"
          description: Success
        "401":
          description: Unauthorized
      summary: "SmartArts: Get by Id"
      tags:
        - SmartArts
  "/Tables/Borders/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Borders object by its primary key (id)"
      operationId: tables_borders_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table.Borders"
          description: Success
        "401":
          description: Unauthorized
      summary: "Borders: Get by Id"
      tags:
        - Tables/Borders
  "/Tables/Cells/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Cells object by its primary key (id)"
      operationId: tables_cells_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table.Cells"
          description: Success
        "401":
          description: Unauthorized
      summary: "Cells: Get by Id"
      tags:
        - Tables/Cells
  "/Tables/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Table and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: tables_tables_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Tables: Get Dependent Objects Tree"
      tags:
        - Tables
      x-operationName: get-obj-tree
  "/Tables/Columns/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Columns object by its primary key (id)"
      operationId: tables_columns_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table.Columns"
          description: Success
        "401":
          description: Unauthorized
      summary: "Columns: Get by Id"
      tags:
        - Tables/Columns
  "/Tables/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: tables_tables_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table.Tables.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Tables: Get Details"
      tags:
        - Tables
      x-operationName: details
  "/Tables/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Table object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Table objects.
      operationId: tables_tables_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Tables: Get Underlying Xml"
      tags:
        - Tables
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Table object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Table objects.
      operationId: tables_tables_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Tables: Modify Underlying Xml"
      tags:
        - Tables
      x-operationName: put-xml
  "/Tables/Rows/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Rows object by its primary key (id)"
      operationId: tables_rows_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table.Rows"
          description: Success
        "401":
          description: Unauthorized
      summary: "Rows: Get by Id"
      tags:
        - Tables/Rows
  "/Tables/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Table as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: tables_tables_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Tables: Get Svg file"
      tags:
        - Tables
      x-operationName: get-svg
  "/Tables/TableUpdate/{id}":
    get:
      description: Gets a TabletDataDTO object, usually used for downstream updates to table content
      operationId: tables_tables_tableupdate_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table.TableDataDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "Table: Get Table Data"
      tags:
        - Tables
    put:
      description: Simplifies table update by allowing users to supply strings to table cells  via TableDataDTO
      operationId: tables_tables_tableupdate_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/Table.TableDataDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/Table.TableDataDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/Table.TableDataDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/Table.TableDataDTO"
        description: ""
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Tables: Update Table Data"
      tags:
        - Tables
  "/Tables/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Tables object by its primary key (id)"
      operationId: tables_tables_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table.Tables"
          description: Success
        "401":
          description: Unauthorized
      summary: "Tables: Get by Id"
      tags:
        - Tables
  "/Themes/BackgroundFills/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a BackgroundFills object by its primary key (id)"
      operationId: themes_backgroundfills_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.BackgroundFills"
          description: Success
        "401":
          description: Unauthorized
      summary: "BackgroundFills: Get by Id"
      tags:
        - Themes/BackgroundFills
  "/Themes/ChildObjects/{id}":
    get:
      description: This endpoint is helpful for helping users and bots identify dependent objects to this Theme and retreive their corresponding metadata in order to make modifications to those objects in downstream operations.
      operationId: theme_themes_childobjects_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChildObjects"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Forbidden
      summary: "Theme: Get Dependent Objects Tree"
      tags:
        - Themes
      x-operationName: get-obj-tree
  "/Themes/Colors/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Colors object by its primary key (id)"
      operationId: themes_colors_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.Colors"
          description: Success
        "401":
          description: Unauthorized
      summary: "Colors: Get by Id"
      tags:
        - Themes/Colors
  "/Themes/CustomColors/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a CustomColors object by its primary key (id)"
      operationId: themes_customcolors_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.CustomColors"
          description: Success
        "401":
          description: Unauthorized
      summary: "CustomColors: Get by Id"
      tags:
        - Themes/CustomColors
  "/Themes/Details/{id}":
    get:
      description: "Returns object metadata and information about relative dependent objects "
      operationId: theme_themes_details_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.Themes.Details"
          description: Success
        "401":
          description: Unauthorized
      summary: "Theme: Get Details"
      tags:
        - Themes
      x-operationName: details
  "/Themes/EffectMap/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a EffectMap object by its primary key (id)"
      operationId: themes_effectmap_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.EffectMap"
          description: Success
        "401":
          description: Unauthorized
      summary: "EffectMap: Get by Id"
      tags:
        - Themes/EffectMap
  "/Themes/Fills/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Fills object by its primary key (id)"
      operationId: themes_fills_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.Fills"
          description: Success
        "401":
          description: Unauthorized
      summary: "Fills: Get by Id"
      tags:
        - Themes/Fills
  "/Themes/Fonts/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Fonts object by its primary key (id)"
      operationId: themes_fonts_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.Fonts"
          description: Success
        "401":
          description: Unauthorized
      summary: "Fonts: Get by Id"
      tags:
        - Themes/Fonts
  /Themes/Intensity:
    get:
      description: "List Types: Use this method to retreive a list of possible options for the Intensity type. Use the Id from oneof the returned elements on to make changes to elements in the Themes object space."
      operationId: themes_intensity_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Theme.Intensity"
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "Intensity: List All Possible Types"
      tags:
        - Themes/Intensity
      x-operationName: list
  "/Themes/Intensity/TypeId/{type_id}":
    get:
      description: This endpoint returns Type metadata from an integer type_id that can found on objects throughout the api.
      operationId: themes_intensity_typeid_get_type_id
      parameters:
        - in: path
          name: type_id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.Intensity"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "Intensity: Get By Type Id"
      tags:
        - Themes/Intensity
      x-operationName: type-id
  "/Themes/Intensity/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Intensity object by its primary key (id)"
      operationId: themes_intensity_get_id
      parameters:
        - description: ""
          in: path
          name: id
          required: true
          schema:
            description: ""
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.Intensity"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
        "401":
          description: Unauthorized
      summary: "Intensity: Get by Id"
      tags:
        - Themes/Intensity
  "/Themes/LineMap/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a LineMap object by its primary key (id)"
      operationId: themes_linemap_get_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.LineMap"
          description: Success
        "401":
          description: Unauthorized
      summary: "LineMap: Get by Id"
      tags:
        - Themes/LineMap
  "/Themes/OpenOfficeXml/{id}":
    get:
      description: Return the subset of the xml content from within the latest edited version of the OpenXmlDocument from this Theme object.  The returned xml data conforms to the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm).  Use this endpoint a starting point for building client-side extensions that modify Presalytics widgets containing Theme objects.
      operationId: theme_themes_openofficexml_get_id_updated
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should return the orginal uploaded xml (false) or the actively updated version (true, default)
          in: query
          name: updated
          schema:
            default: true
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OoxmlDTO"
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Theme: Get Underlying Xml"
      tags:
        - Themes
      x-operationName: get-xml
    put:
      description: Directly eidt the underlying xml of a Theme object within an OpenOpenXml (e.g. Excel, Powerpoint) document. This endpoint will validatate the submitted xml against the [Ecma-376 standard](http://www.ecma-international.org/publications/standards/Ecma-376.htm) prior to saving modification.  Invalid xml will rejected by this endpoint and a (hopefully) helpful error message will be returned.  Use this endpoint for client-side automation of modifications ot Theme objects.
      operationId: theme_themes_openofficexml_put_id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
          text/json:
            schema:
              $ref: "#/components/schemas/OoxmlDTO"
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Theme: Modify Underlying Xml"
      tags:
        - Themes
      x-operationName: put-xml
  "/Themes/Svg/{id}":
    get:
      description: This endpoint is helpful for rending this Theme as an svg or image object that can then be rendered in a story, dashboard or website.
      operationId: theme_themes_svg_get_id_use_cache
      parameters:
        - in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: Indicates whether API should retrieve content from a cache if aviable (true, default), or force an update (false)
          in: query
          name: use_cache
          schema:
            default: false
            type: boolean
      responses:
        "200":
          content:
            image/svg+xml:
              schema:
                description: The file byte stream.
                format: binary
                title: Svg byte stream
                type: string
          description: Returns an svg formatted-image of this object.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
          description: Bad Request
      summary: "Theme: Get Svg file"
      tags:
        - Themes
      x-operationName: get-svg
  "/Themes/{id}":
    get:
      description: "Get by Id: Use this method to retrieve a Themes object by its primary key (id)"
      operationId: theme_themes_get_id
      parameters:
        - description: An Id of the respository DTO elemennt
          in: path
          name: id
          required: true
          schema:
            description: An Id of the respository DTO elemennt
            format: uuid
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme.Themes"
          description: Success
        "401":
          description: Unauthorized
      summary: "Themes: Get by Id"
      tags:
        - Themes
components:
  schemas:
    Chart.Axes:
      properties:
        axisDataTypeId:
          format: int32
          title: Chart.Axes
          type: integer
        chartsId:
          format: uuid
          title: Chart.Axes
          type: string
        id:
          format: uuid
          title: Chart.Axes
          type: string
        ooxmlId:
          format: int32
          title: Chart.Axes
          type: integer
      type: object
    Chart.Axes.Details:
      properties:
        axisDataTypeId:
          format: int32
          title: Chart.Axes.Details
          type: integer
        chart:
          $ref: "#/components/schemas/Chart.Charts.Details"
        chartsId:
          format: uuid
          title: Chart.Axes.Details
          type: string
        dateCreated:
          format: date-time
          title: Chart.Axes.Details
          type: string
        dateModified:
          format: date-time
          title: Chart.Axes.Details
          type: string
        id:
          format: uuid
          title: Chart.Axes.Details
          type: string
        ooxmlId:
          format: int32
          title: Chart.Axes.Details
          type: integer
        titleTextContainer:
          $ref: "#/components/schemas/Shared.TextContainer.Details"
        userCreated:
          format: uuid
          title: Chart.Axes.Details
          type: string
        userModified:
          format: uuid
          title: Chart.Axes.Details
          type: string
      type: object
    Chart.AxisDataTypes:
      properties:
        description:
          nullable: true
          title: Chart.AxisDataTypes
          type: string
        id:
          format: uuid
          title: Chart.AxisDataTypes
          type: string
        name:
          nullable: true
          title: Chart.AxisDataTypes
          type: string
        ooxmlName:
          nullable: true
          title: Chart.AxisDataTypes
          type: string
        typeId:
          format: int32
          title: Chart.AxisDataTypes
          type: integer
      type: object
    Chart.ChartData:
      properties:
        chartId:
          format: uuid
          nullable: true
          title: Chart.ChartData
          type: string
        id:
          format: uuid
          title: Chart.ChartData
          type: string
      type: object
    Chart.ChartData.Details:
      properties:
        chart:
          $ref: "#/components/schemas/Chart.Charts.Details"
        chartId:
          format: uuid
          nullable: true
          title: Chart.ChartData.Details
          type: string
        columnCollection:
          $ref: "#/components/schemas/Chart.ColumnCollections.Details"
        dataPoints:
          items:
            $ref: "#/components/schemas/Chart.DataPoints.Details"
          nullable: true
          title: Chart.ChartData.Details
          type: array
        dateCreated:
          format: date-time
          title: Chart.ChartData.Details
          type: string
        dateModified:
          format: date-time
          title: Chart.ChartData.Details
          type: string
        id:
          format: uuid
          title: Chart.ChartData.Details
          type: string
        rowCollection:
          $ref: "#/components/schemas/Chart.RowCollections.Details"
        userCreated:
          format: uuid
          title: Chart.ChartData.Details
          type: string
        userModified:
          format: uuid
          title: Chart.ChartData.Details
          type: string
      type: object
    Chart.ChartDataDTO:
      properties:
        categoryNames:
          items:
            type: string
          nullable: true
          type: array
        chartId:
          format: uuid
          type: string
        dataPoints:
          items:
            items:
              format: double
              type: number
            type: array
          nullable: true
          type: array
        seriesNames:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Chart.Charts:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Chart.Charts
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Chart.Charts
          type: string
        id:
          format: uuid
          title: Chart.Charts
          type: string
        name:
          nullable: true
          title: Chart.Charts
          type: string
        packageUri:
          nullable: true
          title: Chart.Charts
          type: string
        parentGraphicId:
          format: uuid
          nullable: true
          title: Chart.Charts
          type: string
        svgBlobUrl:
          nullable: true
          title: Chart.Charts
          type: string
      type: object
    Chart.Charts.Details:
      properties:
        axes:
          items:
            $ref: "#/components/schemas/Chart.Axes.Details"
          nullable: true
          title: Chart.Charts.Details
          type: array
        baseElementBlobUrl:
          nullable: true
          title: Chart.Charts.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Chart.Charts.Details
          type: string
        chartData:
          $ref: "#/components/schemas/Chart.ChartData.Details"
        dateCreated:
          format: date-time
          title: Chart.Charts.Details
          type: string
        dateModified:
          format: date-time
          title: Chart.Charts.Details
          type: string
        id:
          format: uuid
          title: Chart.Charts.Details
          type: string
        name:
          nullable: true
          title: Chart.Charts.Details
          type: string
        packageUri:
          nullable: true
          title: Chart.Charts.Details
          type: string
        parentGraphic:
          $ref: "#/components/schemas/Slide.Graphics.Details"
        parentGraphicId:
          format: uuid
          nullable: true
          title: Chart.Charts.Details
          type: string
        svgBlobUrl:
          nullable: true
          title: Chart.Charts.Details
          type: string
        titleTextContainer:
          $ref: "#/components/schemas/Shared.TextContainer.Details"
        userCreated:
          format: uuid
          title: Chart.Charts.Details
          type: string
        userModified:
          format: uuid
          title: Chart.Charts.Details
          type: string
      type: object
    Chart.ColumnCollections:
      properties:
        chartDataId:
          format: uuid
          nullable: true
          title: Chart.ColumnCollections
          type: string
        id:
          format: uuid
          title: Chart.ColumnCollections
          type: string
      type: object
    Chart.ColumnCollections.Details:
      properties:
        chartData:
          $ref: "#/components/schemas/Chart.ChartData.Details"
        chartDataId:
          format: uuid
          nullable: true
          title: Chart.ColumnCollections.Details
          type: string
        columns:
          items:
            $ref: "#/components/schemas/Chart.Columns.Details"
          nullable: true
          title: Chart.ColumnCollections.Details
          type: array
        dateCreated:
          format: date-time
          title: Chart.ColumnCollections.Details
          type: string
        dateModified:
          format: date-time
          title: Chart.ColumnCollections.Details
          type: string
        id:
          format: uuid
          title: Chart.ColumnCollections.Details
          type: string
        userCreated:
          format: uuid
          title: Chart.ColumnCollections.Details
          type: string
        userModified:
          format: uuid
          title: Chart.ColumnCollections.Details
          type: string
      type: object
    Chart.Columns:
      properties:
        axisId:
          format: uuid
          nullable: true
          title: Chart.Columns
          type: string
        columnCollectionId:
          format: uuid
          nullable: true
          title: Chart.Columns
          type: string
        id:
          format: uuid
          title: Chart.Columns
          type: string
        index:
          format: int32
          title: Chart.Columns
          type: integer
        name:
          nullable: true
          title: Chart.Columns
          type: string
      type: object
    Chart.Columns.Details:
      properties:
        axis:
          $ref: "#/components/schemas/Chart.Axes.Details"
        axisId:
          format: uuid
          nullable: true
          title: Chart.Columns.Details
          type: string
        columnCollection:
          $ref: "#/components/schemas/Chart.ColumnCollections.Details"
        columnCollectionId:
          format: uuid
          nullable: true
          title: Chart.Columns.Details
          type: string
        dateCreated:
          format: date-time
          title: Chart.Columns.Details
          type: string
        dateModified:
          format: date-time
          title: Chart.Columns.Details
          type: string
        id:
          format: uuid
          title: Chart.Columns.Details
          type: string
        index:
          format: int32
          title: Chart.Columns.Details
          type: integer
        name:
          nullable: true
          title: Chart.Columns.Details
          type: string
        userCreated:
          format: uuid
          title: Chart.Columns.Details
          type: string
        userModified:
          format: uuid
          title: Chart.Columns.Details
          type: string
      type: object
    Chart.DataPoints:
      properties:
        chartDataId:
          format: uuid
          nullable: true
          title: Chart.DataPoints
          type: string
        columnId:
          format: uuid
          nullable: true
          title: Chart.DataPoints
          type: string
        id:
          format: uuid
          title: Chart.DataPoints
          type: string
        rowId:
          format: uuid
          nullable: true
          title: Chart.DataPoints
          type: string
        value:
          format: double
          title: Chart.DataPoints
          type: number
      type: object
    Chart.DataPoints.Details:
      properties:
        chartData:
          $ref: "#/components/schemas/Chart.ChartData.Details"
        chartDataId:
          format: uuid
          nullable: true
          title: Chart.DataPoints.Details
          type: string
        column:
          $ref: "#/components/schemas/Chart.Columns.Details"
        columnId:
          format: uuid
          nullable: true
          title: Chart.DataPoints.Details
          type: string
        dateCreated:
          format: date-time
          title: Chart.DataPoints.Details
          type: string
        dateModified:
          format: date-time
          title: Chart.DataPoints.Details
          type: string
        id:
          format: uuid
          title: Chart.DataPoints.Details
          type: string
        row:
          $ref: "#/components/schemas/Chart.Rows.Details"
        rowId:
          format: uuid
          nullable: true
          title: Chart.DataPoints.Details
          type: string
        userCreated:
          format: uuid
          title: Chart.DataPoints.Details
          type: string
        userModified:
          format: uuid
          title: Chart.DataPoints.Details
          type: string
        value:
          format: double
          title: Chart.DataPoints.Details
          type: number
      type: object
    Chart.PlotType:
      properties:
        id:
          format: uuid
          title: Chart.PlotType
          type: string
        plotQualifedAssy:
          nullable: true
          title: Chart.PlotType
          type: string
        plotTypeName:
          nullable: true
          title: Chart.PlotType
          type: string
        rowColTypeId:
          format: int32
          title: Chart.PlotType
          type: integer
        typeId:
          format: int32
          title: Chart.PlotType
          type: integer
      type: object
    Chart.RowCol:
      properties:
        colName:
          nullable: true
          title: Chart.RowCol
          type: string
        colQualifiedAssy:
          nullable: true
          title: Chart.RowCol
          type: string
        id:
          format: uuid
          title: Chart.RowCol
          type: string
        rowName:
          nullable: true
          title: Chart.RowCol
          type: string
        rowQualifedAssy:
          nullable: true
          title: Chart.RowCol
          type: string
        typeId:
          format: int32
          title: Chart.RowCol
          type: integer
      type: object
    Chart.RowCollections:
      properties:
        axisId:
          format: uuid
          nullable: true
          title: Chart.RowCollections
          type: string
        chartDataId:
          format: uuid
          nullable: true
          title: Chart.RowCollections
          type: string
        id:
          format: uuid
          title: Chart.RowCollections
          type: string
        nameFormatType:
          format: int32
          title: Chart.RowCollections
          type: integer
      type: object
    Chart.RowCollections.Details:
      properties:
        axis:
          $ref: "#/components/schemas/Chart.Axes.Details"
        axisId:
          format: uuid
          nullable: true
          title: Chart.RowCollections.Details
          type: string
        chartData:
          $ref: "#/components/schemas/Chart.ChartData.Details"
        chartDataId:
          format: uuid
          nullable: true
          title: Chart.RowCollections.Details
          type: string
        dateCreated:
          format: date-time
          title: Chart.RowCollections.Details
          type: string
        dateModified:
          format: date-time
          title: Chart.RowCollections.Details
          type: string
        id:
          format: uuid
          title: Chart.RowCollections.Details
          type: string
        nameFormatType:
          format: int32
          title: Chart.RowCollections.Details
          type: integer
        rows:
          items:
            $ref: "#/components/schemas/Chart.Rows.Details"
          nullable: true
          title: Chart.RowCollections.Details
          type: array
        userCreated:
          format: uuid
          title: Chart.RowCollections.Details
          type: string
        userModified:
          format: uuid
          title: Chart.RowCollections.Details
          type: string
      type: object
    Chart.RowNameFormatTypes:
      properties:
        formatCode:
          nullable: true
          title: Chart.RowNameFormatTypes
          type: string
        id:
          format: uuid
          title: Chart.RowNameFormatTypes
          type: string
        powerToolsId:
          format: int32
          title: Chart.RowNameFormatTypes
          type: integer
        typeId:
          format: int32
          title: Chart.RowNameFormatTypes
          type: integer
      type: object
    Chart.Rows:
      properties:
        id:
          format: uuid
          title: Chart.Rows
          type: string
        index:
          format: int32
          title: Chart.Rows
          type: integer
        name:
          nullable: true
          title: Chart.Rows
          type: string
        rowNameCollectionId:
          format: uuid
          nullable: true
          title: Chart.Rows
          type: string
      type: object
    Chart.Rows.Details:
      properties:
        dateCreated:
          format: date-time
          title: Chart.Rows.Details
          type: string
        dateModified:
          format: date-time
          title: Chart.Rows.Details
          type: string
        id:
          format: uuid
          title: Chart.Rows.Details
          type: string
        index:
          format: int32
          title: Chart.Rows.Details
          type: integer
        name:
          nullable: true
          title: Chart.Rows.Details
          type: string
        rowNameCollection:
          $ref: "#/components/schemas/Chart.RowCollections.Details"
        rowNameCollectionId:
          format: uuid
          nullable: true
          title: Chart.Rows.Details
          type: string
        userCreated:
          format: uuid
          title: Chart.Rows.Details
          type: string
        userModified:
          format: uuid
          title: Chart.Rows.Details
          type: string
      type: object
    ChildObjects:
      properties:
        entityId:
          format: uuid
          nullable: true
          type: string
        entityName:
          nullable: true
          type: string
        objectType:
          nullable: true
          type: string
        parentEntityId:
          format: uuid
          nullable: true
          type: string
        parentObjectType:
          nullable: true
          type: string
      type: object
    Document:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Document
          type: string
        blobLocation:
          nullable: true
          title: Document
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Document
          type: string
        documentTypeId:
          format: int32
          title: Document
          type: integer
        filename:
          nullable: true
          title: Document
          type: string
        id:
          format: uuid
          title: Document
          type: string
        name:
          nullable: true
          title: Document
          type: string
        ownerGuid:
          format: uuid
          title: Document
          type: string
        packageUri:
          nullable: true
          title: Document
          type: string
        storyId:
          format: uuid
          title: Document
          type: string
        tableStylesXmlBlobUrl:
          nullable: true
          title: Document
          type: string
        title:
          nullable: true
          title: Document
          type: string
      type: object
    Document.Details:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Document.Details
          type: string
        blobLocation:
          nullable: true
          title: Document.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Document.Details
          type: string
        dateCreated:
          format: date-time
          title: Document.Details
          type: string
        dateModified:
          format: date-time
          title: Document.Details
          type: string
        documentTypeId:
          format: int32
          title: Document.Details
          type: integer
        filename:
          nullable: true
          title: Document.Details
          type: string
        id:
          format: uuid
          title: Document.Details
          type: string
        name:
          nullable: true
          title: Document.Details
          type: string
        ownerGuid:
          format: uuid
          title: Document.Details
          type: string
        packageUri:
          nullable: true
          title: Document.Details
          type: string
        slides:
          items:
            $ref: "#/components/schemas/Slide.Slides.Details"
          nullable: true
          title: Document.Details
          type: array
        storyId:
          format: uuid
          title: Document.Details
          type: string
        tableStylesXmlBlobUrl:
          nullable: true
          title: Document.Details
          type: string
        title:
          nullable: true
          title: Document.Details
          type: string
        userCreated:
          format: uuid
          title: Document.Details
          type: string
        userModified:
          format: uuid
          title: Document.Details
          type: string
      type: object
    DocumentCloneDTO:
      properties:
        id:
          format: uuid
          title: DocumentCloneDTO
          type: string
        storyId:
          format: uuid
          title: DocumentCloneDTO
          type: string
      type: object
    DocumentType:
      properties:
        description:
          nullable: true
          title: DocumentType
          type: string
        fileExtension:
          nullable: true
          title: DocumentType
          type: string
        id:
          format: uuid
          title: DocumentType
          type: string
        mimeType:
          nullable: true
          title: DocumentType
          type: string
        name:
          nullable: true
          title: DocumentType
          type: string
        ooxmlPackageType:
          nullable: true
          title: DocumentType
          type: string
        typeId:
          format: int32
          title: DocumentType
          type: integer
      type: object
    OoxmlDTO:
      properties:
        id:
          format: uuid
          nullable: true
          type: string
        openOfficeXml:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    ProblemDetails:
      additionalProperties:
        type: object
      properties:
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        title:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    Shared.ColorTransformationAttributes:
      properties:
        colorTransformationsId:
          format: uuid
          nullable: true
          title: Shared.ColorTransformationAttributes
          type: string
        id:
          format: uuid
          title: Shared.ColorTransformationAttributes
          type: string
        name:
          nullable: true
          title: Shared.ColorTransformationAttributes
          type: string
        value:
          nullable: true
          title: Shared.ColorTransformationAttributes
          type: string
      type: object
    Shared.ColorTransformationAttributes.Details:
      properties:
        colorTransformation:
          $ref: "#/components/schemas/Shared.ColorTransformations.Details"
        colorTransformationsId:
          format: uuid
          nullable: true
          title: Shared.ColorTransformationAttributes.Details
          type: string
        dateCreated:
          format: date-time
          title: Shared.ColorTransformationAttributes.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.ColorTransformationAttributes.Details
          type: string
        id:
          format: uuid
          title: Shared.ColorTransformationAttributes.Details
          type: string
        name:
          nullable: true
          title: Shared.ColorTransformationAttributes.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.ColorTransformationAttributes.Details
          type: string
        userModified:
          format: uuid
          title: Shared.ColorTransformationAttributes.Details
          type: string
        value:
          nullable: true
          title: Shared.ColorTransformationAttributes.Details
          type: string
      type: object
    Shared.ColorTransformations:
      properties:
        id:
          format: uuid
          title: Shared.ColorTransformations
          type: string
        name:
          nullable: true
          title: Shared.ColorTransformations
          type: string
        solidFillsId:
          format: uuid
          nullable: true
          title: Shared.ColorTransformations
          type: string
      type: object
    Shared.ColorTransformations.Details:
      properties:
        colorTransformationAttributes:
          items:
            $ref: "#/components/schemas/Shared.ColorTransformationAttributes.Details"
          nullable: true
          title: Shared.ColorTransformations.Details
          type: array
        dateCreated:
          format: date-time
          title: Shared.ColorTransformations.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.ColorTransformations.Details
          type: string
        id:
          format: uuid
          title: Shared.ColorTransformations.Details
          type: string
        name:
          nullable: true
          title: Shared.ColorTransformations.Details
          type: string
        parentSolidFill:
          $ref: "#/components/schemas/Shared.SolidFills.Details"
        solidFillsId:
          format: uuid
          nullable: true
          title: Shared.ColorTransformations.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.ColorTransformations.Details
          type: string
        userModified:
          format: uuid
          title: Shared.ColorTransformations.Details
          type: string
      type: object
    Shared.ColorTypes:
      properties:
        colorSchemeIndexValueEnum:
          format: int32
          nullable: true
          title: Shared.ColorTypes
          type: integer
        description:
          nullable: true
          title: Shared.ColorTypes
          type: string
        id:
          format: uuid
          title: Shared.ColorTypes
          type: string
        name:
          nullable: true
          title: Shared.ColorTypes
          type: string
        typeId:
          format: int32
          title: Shared.ColorTypes
          type: integer
      type: object
    Shared.DashTypes:
      properties:
        description:
          nullable: true
          title: Shared.DashTypes
          type: string
        id:
          format: uuid
          title: Shared.DashTypes
          type: string
        name:
          nullable: true
          title: Shared.DashTypes
          type: string
        serializedAs:
          nullable: true
          title: Shared.DashTypes
          type: string
        typeId:
          format: int32
          title: Shared.DashTypes
          type: integer
      type: object
    Shared.EffectAttributes:
      properties:
        attributesJson:
          nullable: true
          title: Shared.EffectAttributes
          type: string
        effectId:
          format: uuid
          nullable: true
          title: Shared.EffectAttributes
          type: string
        effectTypeId:
          format: int32
          title: Shared.EffectAttributes
          type: integer
        id:
          format: uuid
          title: Shared.EffectAttributes
          type: string
      type: object
    Shared.EffectAttributes.Details:
      properties:
        attributesJson:
          nullable: true
          title: Shared.EffectAttributes.Details
          type: string
        dateCreated:
          format: date-time
          title: Shared.EffectAttributes.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.EffectAttributes.Details
          type: string
        effect:
          $ref: "#/components/schemas/Shared.Effects.Details"
        effectId:
          format: uuid
          nullable: true
          title: Shared.EffectAttributes.Details
          type: string
        effectTypeId:
          format: int32
          title: Shared.EffectAttributes.Details
          type: integer
        fillMap:
          $ref: "#/components/schemas/Shared.FillMap.Details"
        id:
          format: uuid
          title: Shared.EffectAttributes.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.EffectAttributes.Details
          type: string
        userModified:
          format: uuid
          title: Shared.EffectAttributes.Details
          type: string
      type: object
    Shared.EffectTypes:
      properties:
        description:
          nullable: true
          title: Shared.EffectTypes
          type: string
        id:
          format: uuid
          title: Shared.EffectTypes
          type: string
        name:
          nullable: true
          title: Shared.EffectTypes
          type: string
        typeId:
          format: int32
          title: Shared.EffectTypes
          type: integer
      type: object
    Shared.Effects:
      properties:
        connectorId:
          format: uuid
          nullable: true
          title: Shared.Effects
          type: string
        effectMapId:
          format: uuid
          nullable: true
          title: Shared.Effects
          type: string
        id:
          format: uuid
          title: Shared.Effects
          type: string
        name:
          nullable: true
          title: Shared.Effects
          type: string
        shapeId:
          format: uuid
          nullable: true
          title: Shared.Effects
          type: string
      type: object
    Shared.Effects.Details:
      properties:
        connectorId:
          format: uuid
          nullable: true
          title: Shared.Effects.Details
          type: string
        dateCreated:
          format: date-time
          title: Shared.Effects.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.Effects.Details
          type: string
        effectAttributes:
          items:
            $ref: "#/components/schemas/Shared.EffectAttributes.Details"
          nullable: true
          title: Shared.Effects.Details
          type: array
        effectMap:
          $ref: "#/components/schemas/Theme.EffectMap.Details"
        effectMapId:
          format: uuid
          nullable: true
          title: Shared.Effects.Details
          type: string
        id:
          format: uuid
          title: Shared.Effects.Details
          type: string
        name:
          nullable: true
          title: Shared.Effects.Details
          type: string
        parentConnector:
          $ref: "#/components/schemas/Slide.Connector.Details"
        parentShape:
          $ref: "#/components/schemas/Slide.Shapes.Details"
        shapeId:
          format: uuid
          nullable: true
          title: Shared.Effects.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.Effects.Details
          type: string
        userModified:
          format: uuid
          title: Shared.Effects.Details
          type: string
      type: object
    Shared.FillMap:
      properties:
        connectorId:
          format: uuid
          nullable: true
          title: Shared.FillMap
          type: string
        effectAttributeId:
          format: uuid
          nullable: true
          title: Shared.FillMap
          type: string
        fillTypeId:
          format: int32
          title: Shared.FillMap
          type: integer
        id:
          format: uuid
          title: Shared.FillMap
          type: string
        shapeId:
          format: uuid
          nullable: true
          title: Shared.FillMap
          type: string
        tableCellId:
          format: uuid
          nullable: true
          title: Shared.FillMap
          type: string
        themeBackgroundFillId:
          format: uuid
          nullable: true
          title: Shared.FillMap
          type: string
        themeFillId:
          format: uuid
          nullable: true
          title: Shared.FillMap
          type: string
      type: object
    Shared.FillMap.Details:
      properties:
        connector:
          $ref: "#/components/schemas/Slide.Connector.Details"
        connectorId:
          format: uuid
          nullable: true
          title: Shared.FillMap.Details
          type: string
        dateCreated:
          format: date-time
          title: Shared.FillMap.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.FillMap.Details
          type: string
        effectAttribute:
          $ref: "#/components/schemas/Shared.EffectAttributes.Details"
        effectAttributeId:
          format: uuid
          nullable: true
          title: Shared.FillMap.Details
          type: string
        fillTypeId:
          format: int32
          title: Shared.FillMap.Details
          type: integer
        gradientFill:
          $ref: "#/components/schemas/Shared.GradientFills.Details"
        id:
          format: uuid
          title: Shared.FillMap.Details
          type: string
        imageFill:
          $ref: "#/components/schemas/Shared.ImageFills.Details"
        shape:
          $ref: "#/components/schemas/Slide.Shapes.Details"
        shapeId:
          format: uuid
          nullable: true
          title: Shared.FillMap.Details
          type: string
        solidFill:
          $ref: "#/components/schemas/Shared.SolidFills.Details"
        tableCell:
          $ref: "#/components/schemas/Table.Cells.Details"
        tableCellId:
          format: uuid
          nullable: true
          title: Shared.FillMap.Details
          type: string
        themeBackgroundFill:
          $ref: "#/components/schemas/Theme.BackgroundFills.Details"
        themeBackgroundFillId:
          format: uuid
          nullable: true
          title: Shared.FillMap.Details
          type: string
        themeFill:
          $ref: "#/components/schemas/Theme.Fills.Details"
        themeFillId:
          format: uuid
          nullable: true
          title: Shared.FillMap.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.FillMap.Details
          type: string
        userModified:
          format: uuid
          title: Shared.FillMap.Details
          type: string
      type: object
    Shared.FillTypes:
      properties:
        description:
          nullable: true
          title: Shared.FillTypes
          type: string
        id:
          format: uuid
          title: Shared.FillTypes
          type: string
        name:
          nullable: true
          title: Shared.FillTypes
          type: string
        typeId:
          format: int32
          title: Shared.FillTypes
          type: integer
      type: object
    Shared.GradientFills:
      properties:
        angle:
          format: int32
          nullable: true
          title: Shared.GradientFills
          type: integer
        fillMapId:
          format: uuid
          nullable: true
          title: Shared.GradientFills
          type: string
        id:
          format: uuid
          title: Shared.GradientFills
          type: string
        isPath:
          title: Shared.GradientFills
          type: boolean
        pathType:
          nullable: true
          title: Shared.GradientFills
          type: string
        rotateWithShape:
          title: Shared.GradientFills
          type: boolean
      type: object
    Shared.GradientFills.Details:
      properties:
        angle:
          format: int32
          nullable: true
          title: Shared.GradientFills.Details
          type: integer
        dateCreated:
          format: date-time
          title: Shared.GradientFills.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.GradientFills.Details
          type: string
        fillMap:
          $ref: "#/components/schemas/Shared.FillMap.Details"
        fillMapId:
          format: uuid
          nullable: true
          title: Shared.GradientFills.Details
          type: string
        gradientStops:
          items:
            $ref: "#/components/schemas/Shared.GradientStops.Details"
          nullable: true
          title: Shared.GradientFills.Details
          type: array
        id:
          format: uuid
          title: Shared.GradientFills.Details
          type: string
        isPath:
          title: Shared.GradientFills.Details
          type: boolean
        pathType:
          nullable: true
          title: Shared.GradientFills.Details
          type: string
        rotateWithShape:
          title: Shared.GradientFills.Details
          type: boolean
        userCreated:
          format: uuid
          title: Shared.GradientFills.Details
          type: string
        userModified:
          format: uuid
          title: Shared.GradientFills.Details
          type: string
      type: object
    Shared.GradientStops:
      properties:
        gradientFillsId:
          format: uuid
          nullable: true
          title: Shared.GradientStops
          type: string
        id:
          format: uuid
          title: Shared.GradientStops
          type: string
        position:
          format: int32
          title: Shared.GradientStops
          type: integer
      type: object
    Shared.GradientStops.Details:
      properties:
        dateCreated:
          format: date-time
          title: Shared.GradientStops.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.GradientStops.Details
          type: string
        gradientFill:
          $ref: "#/components/schemas/Shared.GradientFills.Details"
        gradientFillsId:
          format: uuid
          nullable: true
          title: Shared.GradientStops.Details
          type: string
        id:
          format: uuid
          title: Shared.GradientStops.Details
          type: string
        position:
          format: int32
          title: Shared.GradientStops.Details
          type: integer
        solidFill:
          $ref: "#/components/schemas/Shared.SolidFills.Details"
        userCreated:
          format: uuid
          title: Shared.GradientStops.Details
          type: string
        userModified:
          format: uuid
          title: Shared.GradientStops.Details
          type: string
      type: object
    Shared.ImageFills:
      properties:
        compressionState:
          nullable: true
          title: Shared.ImageFills
          type: string
        dpi:
          format: int32
          nullable: true
          title: Shared.ImageFills
          type: integer
        effectsJson:
          nullable: true
          title: Shared.ImageFills
          type: string
        fillMapId:
          format: uuid
          nullable: true
          title: Shared.ImageFills
          type: string
        id:
          format: uuid
          title: Shared.ImageFills
          type: string
        rotateWithShape:
          title: Shared.ImageFills
          type: boolean
        sourceRectangle:
          nullable: true
          title: Shared.ImageFills
          type: string
        stretch:
          title: Shared.ImageFills
          type: boolean
        tile:
          nullable: true
          title: Shared.ImageFills
          type: string
      type: object
    Shared.ImageFills.Details:
      properties:
        compressionState:
          nullable: true
          title: Shared.ImageFills.Details
          type: string
        dateCreated:
          format: date-time
          title: Shared.ImageFills.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.ImageFills.Details
          type: string
        dpi:
          format: int32
          nullable: true
          title: Shared.ImageFills.Details
          type: integer
        effectsJson:
          nullable: true
          title: Shared.ImageFills.Details
          type: string
        fillMap:
          $ref: "#/components/schemas/Shared.FillMap.Details"
        fillMapId:
          format: uuid
          nullable: true
          title: Shared.ImageFills.Details
          type: string
        id:
          format: uuid
          title: Shared.ImageFills.Details
          type: string
        picture:
          $ref: "#/components/schemas/Shared.Pictures.Details"
        rotateWithShape:
          title: Shared.ImageFills.Details
          type: boolean
        sourceRectangle:
          nullable: true
          title: Shared.ImageFills.Details
          type: string
        stretch:
          title: Shared.ImageFills.Details
          type: boolean
        tile:
          nullable: true
          title: Shared.ImageFills.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.ImageFills.Details
          type: string
        userModified:
          format: uuid
          title: Shared.ImageFills.Details
          type: string
      type: object
    Shared.LineEndSizes:
      properties:
        description:
          nullable: true
          title: Shared.LineEndSizes
          type: string
        id:
          format: uuid
          title: Shared.LineEndSizes
          type: string
        name:
          nullable: true
          title: Shared.LineEndSizes
          type: string
        serializedAs:
          nullable: true
          title: Shared.LineEndSizes
          type: string
        typeId:
          format: int32
          title: Shared.LineEndSizes
          type: integer
      type: object
    Shared.LineEndTypes:
      properties:
        description:
          nullable: true
          title: Shared.LineEndTypes
          type: string
        id:
          format: uuid
          title: Shared.LineEndTypes
          type: string
        name:
          nullable: true
          title: Shared.LineEndTypes
          type: string
        serializedAs:
          nullable: true
          title: Shared.LineEndTypes
          type: string
        typeId:
          format: int32
          title: Shared.LineEndTypes
          type: integer
      type: object
    Shared.Lines:
      properties:
        bLtoTRBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines
          type: string
        bottomBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines
          type: string
        connectorId:
          format: uuid
          nullable: true
          title: Shared.Lines
          type: string
        dashTypeId:
          format: int32
          title: Shared.Lines
          type: integer
        headEndHeightId:
          format: int32
          title: Shared.Lines
          type: integer
        headEndTypeId:
          format: int32
          title: Shared.Lines
          type: integer
        headEndWidthId:
          format: int32
          title: Shared.Lines
          type: integer
        id:
          format: uuid
          title: Shared.Lines
          type: string
        leftBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines
          type: string
        lineMapId:
          format: uuid
          nullable: true
          title: Shared.Lines
          type: string
        rightBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines
          type: string
        shapeId:
          format: uuid
          nullable: true
          title: Shared.Lines
          type: string
        tLtoBRBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines
          type: string
        tailEndHeightId:
          format: int32
          title: Shared.Lines
          type: integer
        tailEndTypeId:
          format: int32
          title: Shared.Lines
          type: integer
        tailEndWidthId:
          format: int32
          title: Shared.Lines
          type: integer
        topBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines
          type: string
        weight:
          format: int32
          title: Shared.Lines
          type: integer
      type: object
    Shared.Lines.Details:
      properties:
        bLtoTRBorder:
          $ref: "#/components/schemas/Table.Borders.Details"
        bLtoTRBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines.Details
          type: string
        bottomBorder:
          $ref: "#/components/schemas/Table.Borders.Details"
        bottomBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines.Details
          type: string
        connectorId:
          format: uuid
          nullable: true
          title: Shared.Lines.Details
          type: string
        dashTypeId:
          format: int32
          title: Shared.Lines.Details
          type: integer
        dateCreated:
          format: date-time
          title: Shared.Lines.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.Lines.Details
          type: string
        headEndHeightId:
          format: int32
          title: Shared.Lines.Details
          type: integer
        headEndTypeId:
          format: int32
          title: Shared.Lines.Details
          type: integer
        headEndWidthId:
          format: int32
          title: Shared.Lines.Details
          type: integer
        id:
          format: uuid
          title: Shared.Lines.Details
          type: string
        leftBorder:
          $ref: "#/components/schemas/Table.Borders.Details"
        leftBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines.Details
          type: string
        lineColorSolidFill:
          $ref: "#/components/schemas/Shared.SolidFills.Details"
        lineMap:
          $ref: "#/components/schemas/Theme.LineMap.Details"
        lineMapId:
          format: uuid
          nullable: true
          title: Shared.Lines.Details
          type: string
        parentConnector:
          $ref: "#/components/schemas/Slide.Connector.Details"
        parentShape:
          $ref: "#/components/schemas/Slide.Shapes.Details"
        rightBorder:
          $ref: "#/components/schemas/Table.Borders.Details"
        rightBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines.Details
          type: string
        shapeId:
          format: uuid
          nullable: true
          title: Shared.Lines.Details
          type: string
        tLtoBRBorder:
          $ref: "#/components/schemas/Table.Borders.Details"
        tLtoBRBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines.Details
          type: string
        tailEndHeightId:
          format: int32
          title: Shared.Lines.Details
          type: integer
        tailEndTypeId:
          format: int32
          title: Shared.Lines.Details
          type: integer
        tailEndWidthId:
          format: int32
          title: Shared.Lines.Details
          type: integer
        topBorder:
          $ref: "#/components/schemas/Table.Borders.Details"
        topBorderId:
          format: uuid
          nullable: true
          title: Shared.Lines.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.Lines.Details
          type: string
        userModified:
          format: uuid
          title: Shared.Lines.Details
          type: string
        weight:
          format: int32
          title: Shared.Lines.Details
          type: integer
      type: object
    Shared.Paragraph:
      properties:
        id:
          format: uuid
          title: Shared.Paragraph
          type: string
        number:
          format: int32
          title: Shared.Paragraph
          type: integer
        textContainerId:
          format: uuid
          nullable: true
          title: Shared.Paragraph
          type: string
      type: object
    Shared.Paragraph.Details:
      properties:
        dateCreated:
          format: date-time
          title: Shared.Paragraph.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.Paragraph.Details
          type: string
        id:
          format: uuid
          title: Shared.Paragraph.Details
          type: string
        number:
          format: int32
          title: Shared.Paragraph.Details
          type: integer
        text:
          items:
            $ref: "#/components/schemas/Shared.Text.Details"
          nullable: true
          title: Shared.Paragraph.Details
          type: array
        textContainer:
          $ref: "#/components/schemas/Shared.TextContainer.Details"
        textContainerId:
          format: uuid
          nullable: true
          title: Shared.Paragraph.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.Paragraph.Details
          type: string
        userModified:
          format: uuid
          title: Shared.Paragraph.Details
          type: string
      type: object
    Shared.Pictures:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Shared.Pictures
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Shared.Pictures
          type: string
        fileExtension:
          nullable: true
          title: Shared.Pictures
          type: string
        graphicsId:
          format: uuid
          nullable: true
          title: Shared.Pictures
          type: string
        id:
          format: uuid
          title: Shared.Pictures
          type: string
        imageFileBlobUrl:
          nullable: true
          title: Shared.Pictures
          type: string
        imageFillsId:
          format: uuid
          nullable: true
          title: Shared.Pictures
          type: string
        name:
          nullable: true
          title: Shared.Pictures
          type: string
        packageUri:
          nullable: true
          title: Shared.Pictures
          type: string
      type: object
    Shared.Pictures.Details:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Shared.Pictures.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Shared.Pictures.Details
          type: string
        dateCreated:
          format: date-time
          title: Shared.Pictures.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.Pictures.Details
          type: string
        fileExtension:
          nullable: true
          title: Shared.Pictures.Details
          type: string
        graphicsId:
          format: uuid
          nullable: true
          title: Shared.Pictures.Details
          type: string
        id:
          format: uuid
          title: Shared.Pictures.Details
          type: string
        imageFileBlobUrl:
          nullable: true
          title: Shared.Pictures.Details
          type: string
        imageFill:
          $ref: "#/components/schemas/Shared.ImageFills.Details"
        imageFillsId:
          format: uuid
          nullable: true
          title: Shared.Pictures.Details
          type: string
        name:
          nullable: true
          title: Shared.Pictures.Details
          type: string
        packageUri:
          nullable: true
          title: Shared.Pictures.Details
          type: string
        parentGraphic:
          $ref: "#/components/schemas/Slide.Graphics.Details"
        userCreated:
          format: uuid
          title: Shared.Pictures.Details
          type: string
        userModified:
          format: uuid
          title: Shared.Pictures.Details
          type: string
      type: object
    Shared.SolidFills:
      properties:
        colorTypeId:
          format: int32
          nullable: true
          title: Shared.SolidFills
          type: integer
        fillMapId:
          format: uuid
          nullable: true
          title: Shared.SolidFills
          type: string
        hexValue:
          nullable: true
          title: Shared.SolidFills
          type: string
        id:
          format: uuid
          title: Shared.SolidFills
          type: string
        isUserColor:
          title: Shared.SolidFills
          type: boolean
        parentGradientStopId:
          format: uuid
          nullable: true
          title: Shared.SolidFills
          type: string
        parentLineId:
          format: uuid
          nullable: true
          title: Shared.SolidFills
          type: string
        parentTextId:
          format: uuid
          nullable: true
          title: Shared.SolidFills
          type: string
      type: object
    Shared.SolidFills.Details:
      properties:
        colorTransformations:
          $ref: "#/components/schemas/Shared.ColorTransformations.Details"
        colorTypeId:
          format: int32
          nullable: true
          title: Shared.SolidFills.Details
          type: integer
        dateCreated:
          format: date-time
          title: Shared.SolidFills.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.SolidFills.Details
          type: string
        fillMapId:
          format: uuid
          nullable: true
          title: Shared.SolidFills.Details
          type: string
        hexValue:
          nullable: true
          title: Shared.SolidFills.Details
          type: string
        id:
          format: uuid
          title: Shared.SolidFills.Details
          type: string
        isUserColor:
          title: Shared.SolidFills.Details
          type: boolean
        parentFillMap:
          $ref: "#/components/schemas/Shared.FillMap.Details"
        parentGradientStop:
          $ref: "#/components/schemas/Shared.GradientStops.Details"
        parentGradientStopId:
          format: uuid
          nullable: true
          title: Shared.SolidFills.Details
          type: string
        parentLine:
          $ref: "#/components/schemas/Shared.Lines.Details"
        parentLineId:
          format: uuid
          nullable: true
          title: Shared.SolidFills.Details
          type: string
        parentText:
          $ref: "#/components/schemas/Shared.Text.Details"
        parentTextId:
          format: uuid
          nullable: true
          title: Shared.SolidFills.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.SolidFills.Details
          type: string
        userModified:
          format: uuid
          title: Shared.SolidFills.Details
          type: string
      type: object
    Shared.Text:
      properties:
        colorSolidFillsId:
          format: uuid
          nullable: true
          title: Shared.Text
          type: string
        font:
          nullable: true
          title: Shared.Text
          type: string
        fontSize:
          format: int32
          nullable: true
          title: Shared.Text
          type: integer
        id:
          format: uuid
          title: Shared.Text
          type: string
        isBold:
          title: Shared.Text
          type: boolean
        isItalic:
          title: Shared.Text
          type: boolean
        isThemeFont:
          title: Shared.Text
          type: boolean
        isUnderline:
          title: Shared.Text
          type: boolean
        paragraphId:
          format: uuid
          nullable: true
          title: Shared.Text
          type: string
        rawText:
          nullable: true
          title: Shared.Text
          type: string
        sequence:
          format: int32
          title: Shared.Text
          type: integer
      type: object
    Shared.Text.Details:
      properties:
        colorSolidFill:
          $ref: "#/components/schemas/Shared.SolidFills.Details"
        colorSolidFillsId:
          format: uuid
          nullable: true
          title: Shared.Text.Details
          type: string
        dateCreated:
          format: date-time
          title: Shared.Text.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.Text.Details
          type: string
        font:
          nullable: true
          title: Shared.Text.Details
          type: string
        fontSize:
          format: int32
          nullable: true
          title: Shared.Text.Details
          type: integer
        id:
          format: uuid
          title: Shared.Text.Details
          type: string
        isBold:
          title: Shared.Text.Details
          type: boolean
        isItalic:
          title: Shared.Text.Details
          type: boolean
        isThemeFont:
          title: Shared.Text.Details
          type: boolean
        isUnderline:
          title: Shared.Text.Details
          type: boolean
        paragraph:
          $ref: "#/components/schemas/Shared.Paragraph.Details"
        paragraphId:
          format: uuid
          nullable: true
          title: Shared.Text.Details
          type: string
        rawText:
          nullable: true
          title: Shared.Text.Details
          type: string
        sequence:
          format: int32
          title: Shared.Text.Details
          type: integer
        userCreated:
          format: uuid
          title: Shared.Text.Details
          type: string
        userModified:
          format: uuid
          title: Shared.Text.Details
          type: string
      type: object
    Shared.TextContainer:
      properties:
        axisId:
          format: uuid
          nullable: true
          title: Shared.TextContainer
          type: string
        chartId:
          format: uuid
          nullable: true
          title: Shared.TextContainer
          type: string
        id:
          format: uuid
          title: Shared.TextContainer
          type: string
        outerXml:
          nullable: true
          title: Shared.TextContainer
          type: string
        shapeId:
          format: uuid
          nullable: true
          title: Shared.TextContainer
          type: string
        tableCellId:
          format: uuid
          nullable: true
          title: Shared.TextContainer
          type: string
      type: object
    Shared.TextContainer.Details:
      properties:
        axis:
          $ref: "#/components/schemas/Chart.Axes.Details"
        axisId:
          format: uuid
          nullable: true
          title: Shared.TextContainer.Details
          type: string
        chart:
          $ref: "#/components/schemas/Chart.Charts.Details"
        chartId:
          format: uuid
          nullable: true
          title: Shared.TextContainer.Details
          type: string
        dateCreated:
          format: date-time
          title: Shared.TextContainer.Details
          type: string
        dateModified:
          format: date-time
          title: Shared.TextContainer.Details
          type: string
        id:
          format: uuid
          title: Shared.TextContainer.Details
          type: string
        outerXml:
          nullable: true
          title: Shared.TextContainer.Details
          type: string
        paragraphs:
          items:
            $ref: "#/components/schemas/Shared.Paragraph.Details"
          nullable: true
          title: Shared.TextContainer.Details
          type: array
        parentShape:
          $ref: "#/components/schemas/Slide.Shapes.Details"
        shapeId:
          format: uuid
          nullable: true
          title: Shared.TextContainer.Details
          type: string
        tableCell:
          $ref: "#/components/schemas/Table.Cells.Details"
        tableCellId:
          format: uuid
          nullable: true
          title: Shared.TextContainer.Details
          type: string
        userCreated:
          format: uuid
          title: Shared.TextContainer.Details
          type: string
        userModified:
          format: uuid
          title: Shared.TextContainer.Details
          type: string
      type: object
    Slide.ColorMaps:
      properties:
        accent1:
          format: int32
          title: Slide.ColorMaps
          type: integer
        accent2:
          format: int32
          title: Slide.ColorMaps
          type: integer
        accent3:
          format: int32
          title: Slide.ColorMaps
          type: integer
        accent4:
          format: int32
          title: Slide.ColorMaps
          type: integer
        accent5:
          format: int32
          title: Slide.ColorMaps
          type: integer
        accent6:
          format: int32
          title: Slide.ColorMaps
          type: integer
        background1:
          format: int32
          title: Slide.ColorMaps
          type: integer
        background2:
          format: int32
          title: Slide.ColorMaps
          type: integer
        followedHyperlink:
          format: int32
          title: Slide.ColorMaps
          type: integer
        hyperlink:
          format: int32
          title: Slide.ColorMaps
          type: integer
        id:
          format: uuid
          title: Slide.ColorMaps
          type: string
        slideMasterId:
          format: uuid
          nullable: true
          title: Slide.ColorMaps
          type: string
        text1:
          format: int32
          title: Slide.ColorMaps
          type: integer
        text2:
          format: int32
          title: Slide.ColorMaps
          type: integer
      type: object
    Slide.ColorMaps.Details:
      properties:
        accent1:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        accent2:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        accent3:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        accent4:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        accent5:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        accent6:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        background1:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        background2:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        dateCreated:
          format: date-time
          title: Slide.ColorMaps.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.ColorMaps.Details
          type: string
        followedHyperlink:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        hyperlink:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        id:
          format: uuid
          title: Slide.ColorMaps.Details
          type: string
        slideMaster:
          $ref: "#/components/schemas/Slide.SlideMasters.Details"
        slideMasterId:
          format: uuid
          nullable: true
          title: Slide.ColorMaps.Details
          type: string
        text1:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        text2:
          format: int32
          title: Slide.ColorMaps.Details
          type: integer
        userCreated:
          format: uuid
          title: Slide.ColorMaps.Details
          type: string
        userModified:
          format: uuid
          title: Slide.ColorMaps.Details
          type: string
      type: object
    Slide.Connector:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.Connector
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.Connector
          type: string
        endConnectionIdx:
          format: int32
          title: Slide.Connector
          type: integer
        endConnectionShapeId:
          format: uuid
          nullable: true
          title: Slide.Connector
          type: string
        flipHorizontal:
          title: Slide.Connector
          type: boolean
        flipVertical:
          title: Slide.Connector
          type: boolean
        freeFormPathXml:
          nullable: true
          title: Slide.Connector
          type: string
        groupElementsId:
          format: uuid
          nullable: true
          title: Slide.Connector
          type: string
        hidden:
          title: Slide.Connector
          type: boolean
        id:
          format: uuid
          title: Slide.Connector
          type: string
        isThemeEffect:
          title: Slide.Connector
          type: boolean
        isThemeFill:
          title: Slide.Connector
          type: boolean
        isThemeLine:
          title: Slide.Connector
          type: boolean
        name:
          nullable: true
          title: Slide.Connector
          type: string
        ooxmlId:
          format: int32
          title: Slide.Connector
          type: integer
        packageUri:
          nullable: true
          title: Slide.Connector
          type: string
        presetTypeId:
          nullable: true
          title: Slide.Connector
          type: string
        rotation:
          format: int32
          title: Slide.Connector
          type: integer
        startConnectionIdx:
          format: int32
          title: Slide.Connector
          type: integer
        startConnectionShapeId:
          format: uuid
          nullable: true
          title: Slide.Connector
          type: string
        svgBlobUrl:
          nullable: true
          title: Slide.Connector
          type: string
      type: object
    Slide.Connector.Details:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.Connector.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.Connector.Details
          type: string
        dateCreated:
          format: date-time
          title: Slide.Connector.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.Connector.Details
          type: string
        effect:
          $ref: "#/components/schemas/Shared.Effects.Details"
        endConnectionIdx:
          format: int32
          title: Slide.Connector.Details
          type: integer
        endConnectionShape:
          $ref: "#/components/schemas/Slide.Shapes.Details"
        endConnectionShapeId:
          format: uuid
          nullable: true
          title: Slide.Connector.Details
          type: string
        fillMap:
          $ref: "#/components/schemas/Shared.FillMap.Details"
        flipHorizontal:
          title: Slide.Connector.Details
          type: boolean
        flipVertical:
          title: Slide.Connector.Details
          type: boolean
        freeFormPathXml:
          nullable: true
          title: Slide.Connector.Details
          type: string
        groupElement:
          $ref: "#/components/schemas/Slide.GroupElements.Details"
        groupElementsId:
          format: uuid
          nullable: true
          title: Slide.Connector.Details
          type: string
        hidden:
          title: Slide.Connector.Details
          type: boolean
        id:
          format: uuid
          title: Slide.Connector.Details
          type: string
        isThemeEffect:
          title: Slide.Connector.Details
          type: boolean
        isThemeFill:
          title: Slide.Connector.Details
          type: boolean
        isThemeLine:
          title: Slide.Connector.Details
          type: boolean
        line:
          $ref: "#/components/schemas/Shared.Lines.Details"
        name:
          nullable: true
          title: Slide.Connector.Details
          type: string
        ooxmlId:
          format: int32
          title: Slide.Connector.Details
          type: integer
        packageUri:
          nullable: true
          title: Slide.Connector.Details
          type: string
        presetTypeId:
          nullable: true
          title: Slide.Connector.Details
          type: string
        rotation:
          format: int32
          title: Slide.Connector.Details
          type: integer
        startConnectionIdx:
          format: int32
          title: Slide.Connector.Details
          type: integer
        startConnectionShape:
          $ref: "#/components/schemas/Slide.Shapes.Details"
        startConnectionShapeId:
          format: uuid
          nullable: true
          title: Slide.Connector.Details
          type: string
        svgBlobUrl:
          nullable: true
          title: Slide.Connector.Details
          type: string
        userCreated:
          format: uuid
          title: Slide.Connector.Details
          type: string
        userModified:
          format: uuid
          title: Slide.Connector.Details
          type: string
      type: object
    Slide.GraphicTypes:
      properties:
        description:
          nullable: true
          title: Slide.GraphicTypes
          type: string
        id:
          format: uuid
          title: Slide.GraphicTypes
          type: string
        name:
          nullable: true
          title: Slide.GraphicTypes
          type: string
        typeId:
          format: int32
          title: Slide.GraphicTypes
          type: integer
      type: object
    Slide.Graphics:
      properties:
        graphicTypeId:
          format: int32
          title: Slide.Graphics
          type: integer
        groupElementsId:
          format: uuid
          nullable: true
          title: Slide.Graphics
          type: string
        height:
          format: int32
          title: Slide.Graphics
          type: integer
        id:
          format: uuid
          title: Slide.Graphics
          type: string
        name:
          nullable: true
          title: Slide.Graphics
          type: string
        ooxmlId:
          format: int32
          title: Slide.Graphics
          type: integer
        width:
          format: int32
          title: Slide.Graphics
          type: integer
        xOffset:
          format: int32
          title: Slide.Graphics
          type: integer
        yOffset:
          format: int32
          title: Slide.Graphics
          type: integer
      type: object
    Slide.Graphics.Details:
      description: "The graphics class provides a bridge between the Slides and \r

        lower level models including Charts, Tables, Pictures, and SmartArts"
      properties:
        chart:
          $ref: "#/components/schemas/Chart.Charts.Details"
        dateCreated:
          format: date-time
          title: Slide.Graphics.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.Graphics.Details
          type: string
        graphicTypeId:
          format: int32
          title: Slide.Graphics.Details
          type: integer
        groupElement:
          $ref: "#/components/schemas/Slide.GroupElements.Details"
        groupElementsId:
          description: Foreign key to the GroupElements object
          format: uuid
          nullable: true
          title: Slide.Graphics.Details
          type: string
        height:
          format: int32
          title: Slide.Graphics.Details
          type: integer
        id:
          format: uuid
          title: Slide.Graphics.Details
          type: string
        name:
          nullable: true
          title: Slide.Graphics.Details
          type: string
        ooxmlId:
          format: int32
          title: Slide.Graphics.Details
          type: integer
        picture:
          $ref: "#/components/schemas/Shared.Pictures.Details"
        smartArt:
          $ref: "#/components/schemas/Slide.SmartArts.Details"
        table:
          $ref: "#/components/schemas/Table.Tables.Details"
        userCreated:
          format: uuid
          title: Slide.Graphics.Details
          type: string
        userModified:
          format: uuid
          title: Slide.Graphics.Details
          type: string
        width:
          format: int32
          title: Slide.Graphics.Details
          type: integer
        xOffset:
          format: int32
          title: Slide.Graphics.Details
          type: integer
        yOffset:
          format: int32
          title: Slide.Graphics.Details
          type: integer
      type: object
    Slide.GroupElementTypes:
      properties:
        description:
          nullable: true
          title: Slide.GroupElementTypes
          type: string
        id:
          format: uuid
          title: Slide.GroupElementTypes
          type: string
        name:
          nullable: true
          title: Slide.GroupElementTypes
          type: string
        typeId:
          format: int32
          title: Slide.GroupElementTypes
          type: integer
      type: object
    Slide.GroupElementTypes.Details:
      properties:
        dateCreated:
          format: date-time
          title: Slide.GroupElementTypes.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.GroupElementTypes.Details
          type: string
        description:
          nullable: true
          title: Slide.GroupElementTypes.Details
          type: string
        id:
          format: uuid
          title: Slide.GroupElementTypes.Details
          type: string
        name:
          nullable: true
          title: Slide.GroupElementTypes.Details
          type: string
        typeId:
          format: int32
          title: Slide.GroupElementTypes.Details
          type: integer
        userCreated:
          format: uuid
          title: Slide.GroupElementTypes.Details
          type: string
        userModified:
          format: uuid
          title: Slide.GroupElementTypes.Details
          type: string
      type: object
    Slide.GroupElements:
      properties:
        groupElementTypeId:
          format: int32
          title: Slide.GroupElements
          type: integer
        groupElementTypePk:
          format: uuid
          nullable: true
          title: Slide.GroupElements
          type: string
        id:
          format: uuid
          title: Slide.GroupElements
          type: string
        parentGroupElementId:
          format: uuid
          nullable: true
          title: Slide.GroupElements
          type: string
        shapeTreeId:
          format: uuid
          nullable: true
          title: Slide.GroupElements
          type: string
        ultimateParentShapeTreeId:
          format: uuid
          nullable: true
          title: Slide.GroupElements
          type: string
      type: object
    Slide.GroupElements.Details:
      properties:
        childGroupElements:
          items:
            $ref: "#/components/schemas/Slide.GroupElements.Details"
          nullable: true
          title: Slide.GroupElements.Details
          type: array
        connector:
          $ref: "#/components/schemas/Slide.Connector.Details"
        dateCreated:
          format: date-time
          title: Slide.GroupElements.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.GroupElements.Details
          type: string
        graphic:
          $ref: "#/components/schemas/Slide.Graphics.Details"
        group:
          $ref: "#/components/schemas/Slide.Groups.Details"
        groupElementTypeId:
          format: int32
          title: Slide.GroupElements.Details
          type: integer
        groupElementTypePk:
          format: uuid
          nullable: true
          title: Slide.GroupElements.Details
          type: string
        id:
          format: uuid
          title: Slide.GroupElements.Details
          type: string
        parentGroupElement:
          $ref: "#/components/schemas/Slide.GroupElements.Details"
        parentGroupElementId:
          format: uuid
          nullable: true
          title: Slide.GroupElements.Details
          type: string
        shape:
          $ref: "#/components/schemas/Slide.Shapes.Details"
        shapeTree:
          $ref: "#/components/schemas/Slide.ShapeTrees.Details"
        shapeTreeId:
          format: uuid
          nullable: true
          title: Slide.GroupElements.Details
          type: string
        typeInfo:
          $ref: "#/components/schemas/Slide.GroupElementTypes.Details"
        ultimateParentShapeTreeId:
          format: uuid
          nullable: true
          title: Slide.GroupElements.Details
          type: string
        userCreated:
          format: uuid
          title: Slide.GroupElements.Details
          type: string
        userModified:
          format: uuid
          title: Slide.GroupElements.Details
          type: string
      type: object
    Slide.Groups:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.Groups
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.Groups
          type: string
        groupElementId:
          format: uuid
          nullable: true
          title: Slide.Groups
          type: string
        hidden:
          title: Slide.Groups
          type: boolean
        id:
          format: uuid
          title: Slide.Groups
          type: string
        name:
          nullable: true
          title: Slide.Groups
          type: string
        ooxmlId:
          format: int32
          title: Slide.Groups
          type: integer
        packageUri:
          nullable: true
          title: Slide.Groups
          type: string
        svgBlobUrl:
          nullable: true
          title: Slide.Groups
          type: string
        title:
          nullable: true
          title: Slide.Groups
          type: string
      type: object
    Slide.Groups.Details:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.Groups.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.Groups.Details
          type: string
        dateCreated:
          format: date-time
          title: Slide.Groups.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.Groups.Details
          type: string
        groupElement:
          $ref: "#/components/schemas/Slide.GroupElements.Details"
        groupElementId:
          format: uuid
          nullable: true
          title: Slide.Groups.Details
          type: string
        hidden:
          title: Slide.Groups.Details
          type: boolean
        id:
          format: uuid
          title: Slide.Groups.Details
          type: string
        name:
          nullable: true
          title: Slide.Groups.Details
          type: string
        ooxmlId:
          format: int32
          title: Slide.Groups.Details
          type: integer
        packageUri:
          nullable: true
          title: Slide.Groups.Details
          type: string
        svgBlobUrl:
          nullable: true
          title: Slide.Groups.Details
          type: string
        title:
          nullable: true
          title: Slide.Groups.Details
          type: string
        userCreated:
          format: uuid
          title: Slide.Groups.Details
          type: string
        userModified:
          format: uuid
          title: Slide.Groups.Details
          type: string
      type: object
    Slide.ShapeTrees:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.ShapeTrees
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.ShapeTrees
          type: string
        groupElementId:
          format: uuid
          nullable: true
          title: Slide.ShapeTrees
          type: string
        hidden:
          title: Slide.ShapeTrees
          type: boolean
        id:
          format: uuid
          title: Slide.ShapeTrees
          type: string
        name:
          nullable: true
          title: Slide.ShapeTrees
          type: string
        ooxmlId:
          format: int32
          title: Slide.ShapeTrees
          type: integer
        packageUri:
          nullable: true
          title: Slide.ShapeTrees
          type: string
        slideId:
          format: uuid
          nullable: true
          title: Slide.ShapeTrees
          type: string
        svgBlobUrl:
          nullable: true
          title: Slide.ShapeTrees
          type: string
        title:
          nullable: true
          title: Slide.ShapeTrees
          type: string
      type: object
    Slide.ShapeTrees.Details:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.ShapeTrees.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.ShapeTrees.Details
          type: string
        dateCreated:
          format: date-time
          title: Slide.ShapeTrees.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.ShapeTrees.Details
          type: string
        groupElement:
          $ref: "#/components/schemas/Slide.GroupElements.Details"
        groupElementId:
          format: uuid
          nullable: true
          title: Slide.ShapeTrees.Details
          type: string
        groupElements:
          items:
            $ref: "#/components/schemas/Slide.GroupElements.Details"
          nullable: true
          title: Slide.ShapeTrees.Details
          type: array
        hidden:
          title: Slide.ShapeTrees.Details
          type: boolean
        id:
          format: uuid
          title: Slide.ShapeTrees.Details
          type: string
        name:
          nullable: true
          title: Slide.ShapeTrees.Details
          type: string
        ooxmlId:
          format: int32
          title: Slide.ShapeTrees.Details
          type: integer
        packageUri:
          nullable: true
          title: Slide.ShapeTrees.Details
          type: string
        slide:
          $ref: "#/components/schemas/Slide.Slides.Details"
        slideId:
          format: uuid
          nullable: true
          title: Slide.ShapeTrees.Details
          type: string
        svgBlobUrl:
          nullable: true
          title: Slide.ShapeTrees.Details
          type: string
        title:
          nullable: true
          title: Slide.ShapeTrees.Details
          type: string
        userCreated:
          format: uuid
          title: Slide.ShapeTrees.Details
          type: string
        userModified:
          format: uuid
          title: Slide.ShapeTrees.Details
          type: string
      type: object
    Slide.Shapes:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.Shapes
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.Shapes
          type: string
        flipHorizontal:
          title: Slide.Shapes
          type: boolean
        flipVertical:
          title: Slide.Shapes
          type: boolean
        freeFormPathXml:
          nullable: true
          title: Slide.Shapes
          type: string
        groupElementsId:
          format: uuid
          nullable: true
          title: Slide.Shapes
          type: string
        height:
          format: int32
          title: Slide.Shapes
          type: integer
        hidden:
          title: Slide.Shapes
          type: boolean
        id:
          format: uuid
          title: Slide.Shapes
          type: string
        isThemeEffect:
          title: Slide.Shapes
          type: boolean
        isThemeFill:
          title: Slide.Shapes
          type: boolean
        isThemeLine:
          title: Slide.Shapes
          type: boolean
        name:
          nullable: true
          title: Slide.Shapes
          type: string
        ooxmlId:
          format: int32
          title: Slide.Shapes
          type: integer
        packageUri:
          nullable: true
          title: Slide.Shapes
          type: string
        presetTypeId:
          nullable: true
          title: Slide.Shapes
          type: string
        rotation:
          format: int32
          title: Slide.Shapes
          type: integer
        svgBlobUrl:
          nullable: true
          title: Slide.Shapes
          type: string
        width:
          format: int32
          title: Slide.Shapes
          type: integer
        xOffset:
          format: int32
          title: Slide.Shapes
          type: integer
        yOffset:
          format: int32
          title: Slide.Shapes
          type: integer
      type: object
    Slide.Shapes.Details:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.Shapes.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.Shapes.Details
          type: string
        dateCreated:
          format: date-time
          title: Slide.Shapes.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.Shapes.Details
          type: string
        effect:
          $ref: "#/components/schemas/Shared.Effects.Details"
        fillMap:
          $ref: "#/components/schemas/Shared.FillMap.Details"
        flipHorizontal:
          title: Slide.Shapes.Details
          type: boolean
        flipVertical:
          title: Slide.Shapes.Details
          type: boolean
        freeFormPathXml:
          nullable: true
          title: Slide.Shapes.Details
          type: string
        groupElement:
          $ref: "#/components/schemas/Slide.GroupElements.Details"
        groupElementsId:
          format: uuid
          nullable: true
          title: Slide.Shapes.Details
          type: string
        height:
          format: int32
          title: Slide.Shapes.Details
          type: integer
        hidden:
          title: Slide.Shapes.Details
          type: boolean
        id:
          format: uuid
          title: Slide.Shapes.Details
          type: string
        isThemeEffect:
          title: Slide.Shapes.Details
          type: boolean
        isThemeFill:
          title: Slide.Shapes.Details
          type: boolean
        isThemeLine:
          title: Slide.Shapes.Details
          type: boolean
        line:
          $ref: "#/components/schemas/Shared.Lines.Details"
        name:
          nullable: true
          title: Slide.Shapes.Details
          type: string
        ooxmlId:
          format: int32
          title: Slide.Shapes.Details
          type: integer
        packageUri:
          nullable: true
          title: Slide.Shapes.Details
          type: string
        presetTypeId:
          nullable: true
          title: Slide.Shapes.Details
          type: string
        rotation:
          format: int32
          title: Slide.Shapes.Details
          type: integer
        svgBlobUrl:
          nullable: true
          title: Slide.Shapes.Details
          type: string
        textContainer:
          $ref: "#/components/schemas/Shared.TextContainer.Details"
        userCreated:
          format: uuid
          title: Slide.Shapes.Details
          type: string
        userModified:
          format: uuid
          title: Slide.Shapes.Details
          type: string
        width:
          format: int32
          title: Slide.Shapes.Details
          type: integer
        xOffset:
          format: int32
          title: Slide.Shapes.Details
          type: integer
        yOffset:
          format: int32
          title: Slide.Shapes.Details
          type: integer
      type: object
    Slide.SlideMasters:
      properties:
        id:
          format: uuid
          title: Slide.SlideMasters
          type: string
        slideId:
          format: uuid
          nullable: true
          title: Slide.SlideMasters
          type: string
      type: object
    Slide.SlideMasters.Details:
      properties:
        colorMap:
          $ref: "#/components/schemas/Slide.ColorMaps.Details"
        dateCreated:
          format: date-time
          title: Slide.SlideMasters.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.SlideMasters.Details
          type: string
        id:
          format: uuid
          title: Slide.SlideMasters.Details
          type: string
        parentSlide:
          $ref: "#/components/schemas/Slide.Slides.Details"
        slideId:
          format: uuid
          nullable: true
          title: Slide.SlideMasters.Details
          type: string
        userCreated:
          format: uuid
          title: Slide.SlideMasters.Details
          type: string
        userModified:
          format: uuid
          title: Slide.SlideMasters.Details
          type: string
      type: object
    Slide.Slides:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.Slides
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.Slides
          type: string
        documentId:
          format: uuid
          nullable: true
          title: Slide.Slides
          type: string
        id:
          format: uuid
          title: Slide.Slides
          type: string
        name:
          nullable: true
          title: Slide.Slides
          type: string
        number:
          format: int32
          title: Slide.Slides
          type: integer
        ooxmlId:
          format: int32
          title: Slide.Slides
          type: integer
        packageUri:
          nullable: true
          title: Slide.Slides
          type: string
        slideDocumentUrl:
          nullable: true
          title: Slide.Slides
          type: string
        svgBlobUrl:
          nullable: true
          title: Slide.Slides
          type: string
      type: object
    Slide.Slides.Details:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.Slides.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.Slides.Details
          type: string
        dateCreated:
          format: date-time
          title: Slide.Slides.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.Slides.Details
          type: string
        document:
          $ref: "#/components/schemas/Document.Details"
        documentId:
          format: uuid
          nullable: true
          title: Slide.Slides.Details
          type: string
        id:
          format: uuid
          title: Slide.Slides.Details
          type: string
        name:
          nullable: true
          title: Slide.Slides.Details
          type: string
        number:
          format: int32
          title: Slide.Slides.Details
          type: integer
        ooxmlId:
          format: int32
          title: Slide.Slides.Details
          type: integer
        packageUri:
          nullable: true
          title: Slide.Slides.Details
          type: string
        shapeTree:
          $ref: "#/components/schemas/Slide.ShapeTrees.Details"
        slideDocumentUrl:
          nullable: true
          title: Slide.Slides.Details
          type: string
        slideMaster:
          $ref: "#/components/schemas/Slide.SlideMasters.Details"
        svgBlobUrl:
          nullable: true
          title: Slide.Slides.Details
          type: string
        theme:
          $ref: "#/components/schemas/Theme.Themes.Details"
        userCreated:
          format: uuid
          title: Slide.Slides.Details
          type: string
        userModified:
          format: uuid
          title: Slide.Slides.Details
          type: string
      type: object
    Slide.SmartArts:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.SmartArts
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.SmartArts
          type: string
        graphicsId:
          format: uuid
          nullable: true
          title: Slide.SmartArts
          type: string
        id:
          format: uuid
          title: Slide.SmartArts
          type: string
        name:
          nullable: true
          title: Slide.SmartArts
          type: string
        packageUri:
          nullable: true
          title: Slide.SmartArts
          type: string
        svgBlobUrl:
          nullable: true
          title: Slide.SmartArts
          type: string
      type: object
    Slide.SmartArts.Details:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Slide.SmartArts.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Slide.SmartArts.Details
          type: string
        dateCreated:
          format: date-time
          title: Slide.SmartArts.Details
          type: string
        dateModified:
          format: date-time
          title: Slide.SmartArts.Details
          type: string
        graphicsId:
          format: uuid
          nullable: true
          title: Slide.SmartArts.Details
          type: string
        id:
          format: uuid
          title: Slide.SmartArts.Details
          type: string
        name:
          nullable: true
          title: Slide.SmartArts.Details
          type: string
        packageUri:
          nullable: true
          title: Slide.SmartArts.Details
          type: string
        parentGraphic:
          $ref: "#/components/schemas/Slide.Graphics.Details"
        svgBlobUrl:
          nullable: true
          title: Slide.SmartArts.Details
          type: string
        userCreated:
          format: uuid
          title: Slide.SmartArts.Details
          type: string
        userModified:
          format: uuid
          title: Slide.SmartArts.Details
          type: string
      type: object
    Table.Borders:
      properties:
        cellId:
          format: uuid
          nullable: true
          title: Table.Borders
          type: string
        id:
          format: uuid
          title: Table.Borders
          type: string
      type: object
    Table.Borders.Details:
      properties:
        bLtoTR:
          $ref: "#/components/schemas/Shared.Lines.Details"
        bottom:
          $ref: "#/components/schemas/Shared.Lines.Details"
        cell:
          $ref: "#/components/schemas/Table.Cells.Details"
        cellId:
          format: uuid
          nullable: true
          title: Table.Borders.Details
          type: string
        dateCreated:
          format: date-time
          title: Table.Borders.Details
          type: string
        dateModified:
          format: date-time
          title: Table.Borders.Details
          type: string
        id:
          format: uuid
          title: Table.Borders.Details
          type: string
        left:
          $ref: "#/components/schemas/Shared.Lines.Details"
        right:
          $ref: "#/components/schemas/Shared.Lines.Details"
        tLtoBR:
          $ref: "#/components/schemas/Shared.Lines.Details"
        top:
          $ref: "#/components/schemas/Shared.Lines.Details"
        userCreated:
          format: uuid
          title: Table.Borders.Details
          type: string
        userModified:
          format: uuid
          title: Table.Borders.Details
          type: string
      type: object
    Table.Cells:
      properties:
        columnId:
          format: uuid
          nullable: true
          title: Table.Cells
          type: string
        columnSpan:
          format: int32
          title: Table.Cells
          type: integer
        id:
          format: uuid
          title: Table.Cells
          type: string
        isMergedHorozontal:
          title: Table.Cells
          type: boolean
        isMergedVertical:
          title: Table.Cells
          type: boolean
        rowId:
          format: uuid
          nullable: true
          title: Table.Cells
          type: string
        rowSpan:
          format: int32
          title: Table.Cells
          type: integer
      type: object
    Table.Cells.Details:
      properties:
        border:
          $ref: "#/components/schemas/Table.Borders.Details"
        column:
          $ref: "#/components/schemas/Table.Columns.Details"
        columnId:
          format: uuid
          nullable: true
          title: Table.Cells.Details
          type: string
        columnSpan:
          format: int32
          title: Table.Cells.Details
          type: integer
        dateCreated:
          format: date-time
          title: Table.Cells.Details
          type: string
        dateModified:
          format: date-time
          title: Table.Cells.Details
          type: string
        fillMap:
          $ref: "#/components/schemas/Shared.FillMap.Details"
        id:
          format: uuid
          title: Table.Cells.Details
          type: string
        isMergedHorozontal:
          title: Table.Cells.Details
          type: boolean
        isMergedVertical:
          title: Table.Cells.Details
          type: boolean
        row:
          $ref: "#/components/schemas/Table.Rows.Details"
        rowId:
          format: uuid
          nullable: true
          title: Table.Cells.Details
          type: string
        rowSpan:
          format: int32
          title: Table.Cells.Details
          type: integer
        textContainer:
          $ref: "#/components/schemas/Shared.TextContainer.Details"
        userCreated:
          format: uuid
          title: Table.Cells.Details
          type: string
        userModified:
          format: uuid
          title: Table.Cells.Details
          type: string
      type: object
    Table.Columns:
      properties:
        id:
          format: uuid
          title: Table.Columns
          type: string
        index:
          format: int32
          title: Table.Columns
          type: integer
        tableId:
          format: uuid
          nullable: true
          title: Table.Columns
          type: string
        width:
          format: int64
          title: Table.Columns
          type: integer
      type: object
    Table.Columns.Details:
      properties:
        cells:
          items:
            $ref: "#/components/schemas/Table.Cells.Details"
          nullable: true
          title: Table.Columns.Details
          type: array
        dateCreated:
          format: date-time
          title: Table.Columns.Details
          type: string
        dateModified:
          format: date-time
          title: Table.Columns.Details
          type: string
        id:
          format: uuid
          title: Table.Columns.Details
          type: string
        index:
          format: int32
          title: Table.Columns.Details
          type: integer
        table:
          $ref: "#/components/schemas/Table.Tables.Details"
        tableId:
          format: uuid
          nullable: true
          title: Table.Columns.Details
          type: string
        userCreated:
          format: uuid
          title: Table.Columns.Details
          type: string
        userModified:
          format: uuid
          title: Table.Columns.Details
          type: string
        width:
          format: int64
          title: Table.Columns.Details
          type: integer
      type: object
    Table.Rows:
      properties:
        height:
          format: int64
          title: Table.Rows
          type: integer
        id:
          format: uuid
          title: Table.Rows
          type: string
        index:
          format: int32
          title: Table.Rows
          type: integer
        tableId:
          format: uuid
          nullable: true
          title: Table.Rows
          type: string
      type: object
    Table.Rows.Details:
      properties:
        cells:
          items:
            $ref: "#/components/schemas/Table.Cells.Details"
          nullable: true
          title: Table.Rows.Details
          type: array
        dateCreated:
          format: date-time
          title: Table.Rows.Details
          type: string
        dateModified:
          format: date-time
          title: Table.Rows.Details
          type: string
        height:
          format: int64
          title: Table.Rows.Details
          type: integer
        id:
          format: uuid
          title: Table.Rows.Details
          type: string
        index:
          format: int32
          title: Table.Rows.Details
          type: integer
        table:
          $ref: "#/components/schemas/Table.Tables.Details"
        tableId:
          format: uuid
          nullable: true
          title: Table.Rows.Details
          type: string
        userCreated:
          format: uuid
          title: Table.Rows.Details
          type: string
        userModified:
          format: uuid
          title: Table.Rows.Details
          type: string
      type: object
    Table.TableDataDTO:
      properties:
        tableData:
          items:
            items:
              type: string
            type: array
          nullable: true
          type: array
        tableId:
          format: uuid
          type: string
      type: object
    Table.Tables:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Table.Tables
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Table.Tables
          type: string
        hasStylePart:
          title: Table.Tables
          type: boolean
        id:
          format: uuid
          title: Table.Tables
          type: string
        name:
          nullable: true
          title: Table.Tables
          type: string
        packageUri:
          nullable: true
          title: Table.Tables
          type: string
        parentGraphicId:
          format: uuid
          nullable: true
          title: Table.Tables
          type: string
        stylePartOuterXml:
          nullable: true
          title: Table.Tables
          type: string
        svgBlobUrl:
          nullable: true
          title: Table.Tables
          type: string
      type: object
    Table.Tables.Details:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Table.Tables.Details
          type: string
        cells:
          items:
            $ref: "#/components/schemas/Table.Cells.Details"
          nullable: true
          title: Table.Tables.Details
          type: array
        changedBaseElementBlobUrl:
          nullable: true
          title: Table.Tables.Details
          type: string
        columns:
          items:
            $ref: "#/components/schemas/Table.Columns.Details"
          nullable: true
          title: Table.Tables.Details
          type: array
        dateCreated:
          format: date-time
          title: Table.Tables.Details
          type: string
        dateModified:
          format: date-time
          title: Table.Tables.Details
          type: string
        hasStylePart:
          title: Table.Tables.Details
          type: boolean
        id:
          format: uuid
          title: Table.Tables.Details
          type: string
        name:
          nullable: true
          title: Table.Tables.Details
          type: string
        packageUri:
          nullable: true
          title: Table.Tables.Details
          type: string
        parentGraphic:
          $ref: "#/components/schemas/Slide.Graphics.Details"
        parentGraphicId:
          format: uuid
          nullable: true
          title: Table.Tables.Details
          type: string
        rows:
          items:
            $ref: "#/components/schemas/Table.Rows.Details"
          nullable: true
          title: Table.Tables.Details
          type: array
        stylePartOuterXml:
          nullable: true
          title: Table.Tables.Details
          type: string
        svgBlobUrl:
          nullable: true
          title: Table.Tables.Details
          type: string
        userCreated:
          format: uuid
          title: Table.Tables.Details
          type: string
        userModified:
          format: uuid
          title: Table.Tables.Details
          type: string
      type: object
    Theme.BackgroundFills:
      properties:
        id:
          format: uuid
          title: Theme.BackgroundFills
          type: string
        intensityId:
          format: int32
          title: Theme.BackgroundFills
          type: integer
        themeId:
          format: uuid
          nullable: true
          title: Theme.BackgroundFills
          type: string
      type: object
    Theme.BackgroundFills.Details:
      properties:
        dateCreated:
          format: date-time
          title: Theme.BackgroundFills.Details
          type: string
        dateModified:
          format: date-time
          title: Theme.BackgroundFills.Details
          type: string
        fillMap:
          $ref: "#/components/schemas/Shared.FillMap.Details"
        id:
          format: uuid
          title: Theme.BackgroundFills.Details
          type: string
        intensityId:
          format: int32
          title: Theme.BackgroundFills.Details
          type: integer
        theme:
          $ref: "#/components/schemas/Theme.Themes.Details"
        themeId:
          format: uuid
          nullable: true
          title: Theme.BackgroundFills.Details
          type: string
        userCreated:
          format: uuid
          title: Theme.BackgroundFills.Details
          type: string
        userModified:
          format: uuid
          title: Theme.BackgroundFills.Details
          type: string
      type: object
    Theme.Colors:
      properties:
        accent1:
          nullable: true
          title: Theme.Colors
          type: string
        accent2:
          nullable: true
          title: Theme.Colors
          type: string
        accent3:
          nullable: true
          title: Theme.Colors
          type: string
        accent4:
          nullable: true
          title: Theme.Colors
          type: string
        accent5:
          nullable: true
          title: Theme.Colors
          type: string
        accent6:
          nullable: true
          title: Theme.Colors
          type: string
        dark1:
          nullable: true
          title: Theme.Colors
          type: string
        dark2:
          nullable: true
          title: Theme.Colors
          type: string
        followedHyperlink:
          nullable: true
          title: Theme.Colors
          type: string
        hyperlink:
          nullable: true
          title: Theme.Colors
          type: string
        id:
          format: uuid
          title: Theme.Colors
          type: string
        light1:
          nullable: true
          title: Theme.Colors
          type: string
        light2:
          nullable: true
          title: Theme.Colors
          type: string
        name:
          nullable: true
          title: Theme.Colors
          type: string
        themeId:
          format: uuid
          nullable: true
          title: Theme.Colors
          type: string
      type: object
    Theme.Colors.Details:
      properties:
        accent1:
          nullable: true
          title: Theme.Colors.Details
          type: string
        accent2:
          nullable: true
          title: Theme.Colors.Details
          type: string
        accent3:
          nullable: true
          title: Theme.Colors.Details
          type: string
        accent4:
          nullable: true
          title: Theme.Colors.Details
          type: string
        accent5:
          nullable: true
          title: Theme.Colors.Details
          type: string
        accent6:
          nullable: true
          title: Theme.Colors.Details
          type: string
        dark1:
          nullable: true
          title: Theme.Colors.Details
          type: string
        dark2:
          nullable: true
          title: Theme.Colors.Details
          type: string
        dateCreated:
          format: date-time
          title: Theme.Colors.Details
          type: string
        dateModified:
          format: date-time
          title: Theme.Colors.Details
          type: string
        followedHyperlink:
          nullable: true
          title: Theme.Colors.Details
          type: string
        hyperlink:
          nullable: true
          title: Theme.Colors.Details
          type: string
        id:
          format: uuid
          title: Theme.Colors.Details
          type: string
        light1:
          nullable: true
          title: Theme.Colors.Details
          type: string
        light2:
          nullable: true
          title: Theme.Colors.Details
          type: string
        name:
          nullable: true
          title: Theme.Colors.Details
          type: string
        theme:
          $ref: "#/components/schemas/Theme.Themes.Details"
        themeId:
          format: uuid
          nullable: true
          title: Theme.Colors.Details
          type: string
        userCreated:
          format: uuid
          title: Theme.Colors.Details
          type: string
        userModified:
          format: uuid
          title: Theme.Colors.Details
          type: string
      type: object
    Theme.CustomColors:
      properties:
        hexValue:
          nullable: true
          title: Theme.CustomColors
          type: string
        id:
          format: uuid
          title: Theme.CustomColors
          type: string
        name:
          nullable: true
          title: Theme.CustomColors
          type: string
        themeId:
          format: uuid
          nullable: true
          title: Theme.CustomColors
          type: string
      type: object
    Theme.CustomColors.Details:
      properties:
        dateCreated:
          format: date-time
          title: Theme.CustomColors.Details
          type: string
        dateModified:
          format: date-time
          title: Theme.CustomColors.Details
          type: string
        hexValue:
          nullable: true
          title: Theme.CustomColors.Details
          type: string
        id:
          format: uuid
          title: Theme.CustomColors.Details
          type: string
        name:
          nullable: true
          title: Theme.CustomColors.Details
          type: string
        theme:
          $ref: "#/components/schemas/Theme.Themes.Details"
        themeId:
          format: uuid
          nullable: true
          title: Theme.CustomColors.Details
          type: string
        userCreated:
          format: uuid
          title: Theme.CustomColors.Details
          type: string
        userModified:
          format: uuid
          title: Theme.CustomColors.Details
          type: string
      type: object
    Theme.EffectMap:
      properties:
        id:
          format: uuid
          title: Theme.EffectMap
          type: string
        intensityId:
          format: int32
          title: Theme.EffectMap
          type: integer
        themeId:
          format: uuid
          nullable: true
          title: Theme.EffectMap
          type: string
      type: object
    Theme.EffectMap.Details:
      properties:
        dateCreated:
          format: date-time
          title: Theme.EffectMap.Details
          type: string
        dateModified:
          format: date-time
          title: Theme.EffectMap.Details
          type: string
        effect:
          $ref: "#/components/schemas/Shared.Effects.Details"
        id:
          format: uuid
          title: Theme.EffectMap.Details
          type: string
        intensityId:
          format: int32
          title: Theme.EffectMap.Details
          type: integer
        theme:
          $ref: "#/components/schemas/Theme.Themes.Details"
        themeId:
          format: uuid
          nullable: true
          title: Theme.EffectMap.Details
          type: string
        userCreated:
          format: uuid
          title: Theme.EffectMap.Details
          type: string
        userModified:
          format: uuid
          title: Theme.EffectMap.Details
          type: string
      type: object
    Theme.Fills:
      properties:
        id:
          format: uuid
          title: Theme.Fills
          type: string
        intensityId:
          format: int32
          title: Theme.Fills
          type: integer
        themeId:
          format: uuid
          nullable: true
          title: Theme.Fills
          type: string
      type: object
    Theme.Fills.Details:
      properties:
        dateCreated:
          format: date-time
          title: Theme.Fills.Details
          type: string
        dateModified:
          format: date-time
          title: Theme.Fills.Details
          type: string
        fillMap:
          $ref: "#/components/schemas/Shared.FillMap.Details"
        id:
          format: uuid
          title: Theme.Fills.Details
          type: string
        intensityId:
          format: int32
          title: Theme.Fills.Details
          type: integer
        theme:
          $ref: "#/components/schemas/Theme.Themes.Details"
        themeId:
          format: uuid
          nullable: true
          title: Theme.Fills.Details
          type: string
        userCreated:
          format: uuid
          title: Theme.Fills.Details
          type: string
        userModified:
          format: uuid
          title: Theme.Fills.Details
          type: string
      type: object
    Theme.Fonts:
      properties:
        bodyFont:
          nullable: true
          title: Theme.Fonts
          type: string
        headingFont:
          nullable: true
          title: Theme.Fonts
          type: string
        id:
          format: uuid
          title: Theme.Fonts
          type: string
        themeId:
          format: uuid
          nullable: true
          title: Theme.Fonts
          type: string
      type: object
    Theme.Fonts.Details:
      properties:
        bodyFont:
          nullable: true
          title: Theme.Fonts.Details
          type: string
        dateCreated:
          format: date-time
          title: Theme.Fonts.Details
          type: string
        dateModified:
          format: date-time
          title: Theme.Fonts.Details
          type: string
        headingFont:
          nullable: true
          title: Theme.Fonts.Details
          type: string
        id:
          format: uuid
          title: Theme.Fonts.Details
          type: string
        theme:
          $ref: "#/components/schemas/Theme.Themes.Details"
        themeId:
          format: uuid
          nullable: true
          title: Theme.Fonts.Details
          type: string
        userCreated:
          format: uuid
          title: Theme.Fonts.Details
          type: string
        userModified:
          format: uuid
          title: Theme.Fonts.Details
          type: string
      type: object
    Theme.Intensity:
      properties:
        description:
          nullable: true
          title: Theme.Intensity
          type: string
        id:
          format: uuid
          title: Theme.Intensity
          type: string
        name:
          nullable: true
          title: Theme.Intensity
          type: string
        typeId:
          format: int32
          title: Theme.Intensity
          type: integer
      type: object
    Theme.LineMap:
      properties:
        id:
          format: uuid
          title: Theme.LineMap
          type: string
        intensityId:
          format: int32
          title: Theme.LineMap
          type: integer
        themeId:
          format: uuid
          nullable: true
          title: Theme.LineMap
          type: string
      type: object
    Theme.LineMap.Details:
      properties:
        dateCreated:
          format: date-time
          title: Theme.LineMap.Details
          type: string
        dateModified:
          format: date-time
          title: Theme.LineMap.Details
          type: string
        id:
          format: uuid
          title: Theme.LineMap.Details
          type: string
        intensityId:
          format: int32
          title: Theme.LineMap.Details
          type: integer
        line:
          $ref: "#/components/schemas/Shared.Lines.Details"
        theme:
          $ref: "#/components/schemas/Theme.Themes.Details"
        themeId:
          format: uuid
          nullable: true
          title: Theme.LineMap.Details
          type: string
        userCreated:
          format: uuid
          title: Theme.LineMap.Details
          type: string
        userModified:
          format: uuid
          title: Theme.LineMap.Details
          type: string
      type: object
    Theme.Themes:
      properties:
        baseElementBlobUrl:
          nullable: true
          title: Theme.Themes
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Theme.Themes
          type: string
        id:
          format: uuid
          title: Theme.Themes
          type: string
        name:
          nullable: true
          title: Theme.Themes
          type: string
        packageUri:
          nullable: true
          title: Theme.Themes
          type: string
        slideId:
          format: uuid
          nullable: true
          title: Theme.Themes
          type: string
      type: object
    Theme.Themes.Details:
      properties:
        backgroundFills:
          items:
            $ref: "#/components/schemas/Theme.BackgroundFills.Details"
          nullable: true
          title: Theme.Themes.Details
          type: array
        baseElementBlobUrl:
          nullable: true
          title: Theme.Themes.Details
          type: string
        changedBaseElementBlobUrl:
          nullable: true
          title: Theme.Themes.Details
          type: string
        colors:
          $ref: "#/components/schemas/Theme.Colors.Details"
        customColors:
          items:
            $ref: "#/components/schemas/Theme.CustomColors.Details"
          nullable: true
          title: Theme.Themes.Details
          type: array
        dateCreated:
          format: date-time
          title: Theme.Themes.Details
          type: string
        dateModified:
          format: date-time
          title: Theme.Themes.Details
          type: string
        effectMaps:
          items:
            $ref: "#/components/schemas/Theme.EffectMap.Details"
          nullable: true
          title: Theme.Themes.Details
          type: array
        fills:
          items:
            $ref: "#/components/schemas/Theme.Fills.Details"
          nullable: true
          title: Theme.Themes.Details
          type: array
        fonts:
          $ref: "#/components/schemas/Theme.Fonts.Details"
        id:
          format: uuid
          title: Theme.Themes.Details
          type: string
        lineMaps:
          items:
            $ref: "#/components/schemas/Theme.LineMap.Details"
          nullable: true
          title: Theme.Themes.Details
          type: array
        name:
          nullable: true
          title: Theme.Themes.Details
          type: string
        packageUri:
          nullable: true
          title: Theme.Themes.Details
          type: string
        slide:
          $ref: "#/components/schemas/Slide.Slides.Details"
        slideId:
          format: uuid
          nullable: true
          title: Theme.Themes.Details
          type: string
        userCreated:
          format: uuid
          title: Theme.Themes.Details
          type: string
        userModified:
          format: uuid
          title: Theme.Themes.Details
          type: string
      type: object