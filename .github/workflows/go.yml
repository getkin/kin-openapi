name: go
on:
  pull_request:
  push:

jobs:
  build-and-test:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GO111MODULE: 'on'
      CGO_ENABLED: '0'
    strategy:
      fail-fast: true
      matrix:
        go: ['1.16', '1.x']
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    name: ${{ matrix.go }} on ${{ matrix.os }}
    steps:

    - uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"
    - run: echo ${{ steps.go-cache-paths.outputs.go-build }}
    - run: echo ${{ steps.go-cache-paths.outputs.go-mod }}

    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-${{ matrix.go }}-build-${{ hashFiles('**/go.sum') }}

    - name: Go Mod Cache (go>=1.15)
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-${{ matrix.go }}-mod-${{ hashFiles('**/go.sum') }}

    - uses: actions/checkout@v2

    - run: go mod download && go mod tidy && go mod verify
    - if: runner.os == 'Linux'
      run: git --no-pager diff && [[ $(git --no-pager diff --name-only | wc -l) = 0 ]]

    - run: go vet ./...
    - if: runner.os == 'Linux'
      run: git --no-pager diff && [[ $(git --no-pager diff --name-only | wc -l) = 0 ]]

    - run: go fmt ./...
    - if: runner.os == 'Linux'
      run: git --no-pager diff && [[ $(git --no-pager diff --name-only | wc -l) = 0 ]]

    - run: go test ./...
    - run: go test -v -run TestRaceyPatternSchema -race ./...
      env:
        CGO_ENABLED: '1'
    - if: runner.os == 'Linux'
      run: git --no-pager diff && [[ $(git --no-pager diff --name-only | wc -l) = 0 ]]

    - if: runner.os == 'Linux'
      name: Errors must not be capitalized https://github.com/golang/go/wiki/CodeReviewComments#error-strings
      run: |
        ! git grep -E '(fmt|errors)[^(]+\(.[A-Z]'

    - if: runner.os == 'Linux'
      name: Did you mean %q
      run: |
        ! git grep -E "'[%].'"
